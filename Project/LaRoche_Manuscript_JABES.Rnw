\documentclass[12pt]{article}
\usepackage[margin=1in]{geometry}
\usepackage{setspace}
\doublespacing
% \usepackage{fullpage}
%\usepackage{graphicsx}
% \usepackage[colorlinks=true,linkcolor=blue]{hyperref}
\usepackage[backend=bibtex,style=authoryear]{biblatex}
\addbibresource{MosqBiblio.bib}
%For regular papers, a motivating example should be presented early in the paper. The statistical development should then be presented, and the results applied to the example.
\title{A method for identifying households at high risk for mosquito borne illnesses.}
\date{}
\begin{document}
\maketitle

<< ReadIn, echo = FALSE, message = FALSE, warning = FALSE, eval = FALSE>>= 
#read in and check data 
rm(list = ls())
library(car)
library(ggplot2)
library(ggmap)
library(MASS)
library(plyr)
library(dplyr)
library(xtable)
longdat <- read.csv("C:/Classes/AppliedBiostat/Project/Domconv_918.csv")[1:17823, ]
longdat$site <- Recode(longdat$site, "c('High', 'HIGH') = 'High'")
longdat$Villcodef <- as.factor(longdat$Villcode)
longdat$Housef <- as.factor(longdat$House)
#create a variable which combines subcode,  villcode,  and house
longdat$household <- factor(with(longdat,  paste(Subcode,  Villcode,  House,  sep = "_")))
longdat$latlon <- factor(with(longdat,  paste(Lat,  Long,  sep = "_")))
# There are more unique housholds than latlons!
# strsplit(unique(dat$latlon), split = "_") #get unique lat lons in a list
longdat$Age <- as.numeric(as.character(longdat$Age))#introducing NAs on purpose
longdat$HHhead <- Recode(longdat$HHhead, "c('F', 'M', 'N/A') = 'N'")
longdat$Relate <- as.numeric(as.character(Recode(longdat$Relate, "'N/A' = NA")))
longdat$HHspray <- Recode(longdat$HHspray, "c('', '4', 'N/A') = NA")
longdat$NetHH <- Recode(longdat$NetHH, "'N/A' = NA")
longdat$NetHH <- droplevels(longdat$NetHH)
@

<<r eliminateDuplicates, echo = FALSE, eval = FALSE>>= 
#find duplicates entries within households
houses <- factor(unique(longdat$household))
N <- length(houses)
#loop through households and find entires that have unique age sex combos
longdat$age_sex <- factor(paste(longdat$Age, longdat$Sex, sep = "_"))
subdat <- list(length = N)
for( i in 1:N){
  #limit to 1 household
  housedat <- longdat[longdat$household == houses[i], ]
  include <- which(!duplicated(housedat$age_sex))
  subdat[[i]] <- housedat[include, ]
}
datunique <- do.call(rbind, subdat)
rm(subdat)
@

<<r summarizeHouseHolds,  echo = FALSE,  eval = FALSE>>= 
#This chunk is to create a new data set which is based on the household 
numocc <- numFem <- numMale <- oldest <- youngest <- headsex <- headage <- net <- under5 <- under1 <- under18 <- over65 <- periph <- lat <- lon <- hspray <- site <- elev <- lang <- rep(0, length = N)
#loop through each unique household and calculate summary variables
for (i in 1:N){
  numocc[i] <- length(which(datunique$household == houses[i]))
  numFem[i] <- sum(datunique$household == houses[i] & datunique$Sex == "F", na.rm = T)
  numMale[i] <- sum(datunique$household == houses[i] & datunique$Sex == "M", na.rm = T)
  oldest[i] <- max(datunique[datunique$household == houses[i], ]$Age)
  youngest[i] <- min(datunique[datunique$household == houses[i], ]$Age)
  if(length(datunique[(datunique$household == houses[i] & datunique$HHhead == "Y"), ]$Sex) == 1){
    headsex[i] <- as.character(datunique[(datunique$household == houses[i] & datunique$HHhead == "Y"), ]$Sex)
  }else{headsex[i] <- NA}
  if(length(datunique[datunique$household == houses[i]& datunique$HHhead == "Y", ]$Age) == 1){
    headage[i] <- datunique[datunique$household == houses[i]& datunique$HHhead == "Y", ]$Age
  }else{headage[i] <- NA}
  netans <- as.character(datunique[datunique$household == houses[i], ]$NetHH)
  net[i] <- sum(netans == "Y", na.rm = T)
  under5[i] <- sum(datunique[datunique$household == houses[i], ]$Age>1 & datunique[datunique$household == houses[i], ]$Age <= 5, na.rm = T)#children >1 and less than 5
  under1[i] <- sum(datunique[datunique$household == houses[i], ]$Age <= 1, na.rm = T)
  under18[i] <- sum(datunique[datunique$household == houses[i], ]$Age<18, na.rm = T)
  over65[i] <- sum(datunique[datunique$household == houses[i], ]$Age >= 65, na.rm = T)
  family <- datunique[datunique$household == houses[i], ]$Relate
  periph[i] <- any(family>9)#classify any one more distant than grandchild as periphery
  lat[i] <- datunique[datunique$household == houses[i], ]$Lat[1]
  lon[i] <- datunique[datunique$household == houses[i], ]$Long[1]
  spray <- datunique[datunique$household == houses[i], ]$HHspray
  hspray[i] <- sum(spray == "Y", na.rm = T)
  site[i] <- datunique[datunique$household == houses[i], ]$site[1]
  elev[i] <- datunique[datunique$household == houses[i], ]$Elevation[1]
  lang[i] <- datunique[datunique$household == houses[i], ]$Lang[1]
  
}

#create data frame from new data vectors
hdat <- data.frame(houses, numocc, numFem, numMale, oldest, youngest, headsex, headage, net, under5, under1, under18, over65, periph, lat, lon, hspray, site, elev, lang)
#save new data to csv file so I don't have to run this costly loop again
write.csv(hdat, "C:/Classes/AppliedBiostat/Project/housedata.csv")
@

\section{Abstract}
Mosquito borne illnesses are a significant threat to public health. Concerted efforts have been made in the past decade to reduce and in some cases eliminate mosquito borne diseases with the use of prophylactic interventions. The World Health Organization recommends preferential administration of interventions to those with the highest risk of negative/ severe health outcomes. However,  previous research has also identified the benefit of additionally targeting interventions at those with the highest risk of infections to prevent subsequent transmission. We develop a methodology that combines these two targets of health outcomes and infection risk. We use census information to determine health risk and we use a topographic wetness index as an indicator of habitat for mosquito species that inhabit natural environments.  We implement the method to evaluate the community-reported administration of interventions at two sites in Kenya. We find preferential administration of interventions at the high-elevation epidemic-prone site but not at the low-elevation endemic site. Our results have important implications for assessing the administration of interventions in the battle against mosquito borne illnesses.

\textbf{Keywords:} Malaria, West Nile Virus, GIS, Remote Sensing, Public Health 

\section{Introduction}
%introduce the problem
Malaria and other mosquito borne illnesses are considered a significant threat to public health and a socio-economic burden in countries where these diseases are either endemic or epidemic (\cite{Crouch}). Concerted efforts have been made in the past decade to reduce and in some cases eliminate malaria specifically. Many national strategic plans to reduce or eliminate malaria are in their third generation.  The World Health Organization recommends prioritizing the administration of interventions to pregnant women and young children followed by progressively achieving intervention coverage of all community members. The preferential administration of interventions to pregnant women and young children reflects the disproportionate disease burden borne by this group and the increased likelihood of severe health outcomes(\cite{Bousema2012}). However,  previous research has identified the benefit of additionally targeting interventions at those with the highest risk of infections (\cite{Schantz-Dunn2009}). Identifying individuals which are both vulnerable to disease and likely to be exposed to an infected mosquito is therefore a priority.  However, identifying high risk individuals can be costly and inefficient.\\

The Topographic Wetness Index (TWI) (\cite{Beven1979}) derived from freely available remotely-sensed topographic data has been previously investigated as a tool for assessing risk of malaria infection (\cite{Cohen2008,Cohen2010}). TWI can potentially identify areas where water is likely to pool and \emph{Anopheles} densities are likely to be higher. This method, therefore, has the potential to both inform new distribution campaigns and evaluate the efficacy of existing campaigns.  However, traditional TWI algorithms are complicated and generally require specialized software to implement.  Moreover, simply identifying areas where mosquitoes are likely to breed does not account for the differential health risk of the exposed population.  We develop a simple, matrix-based, methodology using topographic data and combine this with a household census of demographics to identify high risk households.  We apply the method to two sites in Kenya where malaria is either endemic or epidemic-prone.  We compare our methodology to a traditional Topographic  Wetness Index using data on intervention use for two interventions at two sites in Kenya. \\%This method, therefore, has the potential to both inform new distribution campaigns and evaluate the efficacy of existing campaigns.



\section{Statistical Methodology}%main idea is to use traditional or aspect variance methods and see if there is a substantial difference.  Would be best 
Every household on a landscape will vary with respect to both the risk of exposure to mosquitoes and the number of at risk individuals in the household. We develop a method to combine these two risk factors into an overall risk score for each household within a management area in order to identify the households which will yield the greatest benefit from the application of limited resources.\\

\subsection{Topographical Wetness Index}

The Topographical Wetness index was originally introduced by Beven and Kirby in 1979 (\cite{Beven1979}).  TWI combines a measure of the amount of upstream drainage area with the local slope to determine the amount of wetness likely to accumulate at a point and is defined by Beven and Kirby generally as:
$$ln\frac{a}{tanb},$$
where $a$ is the local up-slope area (local area draining to the point) and $tanb$ is the local slope in radians.  The TWI is designed to predict the amount of water that is likely to flow into an area, based on surface topology, and the rate at which this water will flow out of an area.  Since TWI was first defined numerous methods have been developed to calculate it and several review papers have been published (\cite{Quinn1995,Sørensen2006}) as well as alternative modeling strategies developed (\cite{Grabs2009}).  Areas with high in-flow and low out-flow are likely provide habitat for breeding mosquitoes. \\

The primary goal of using TWI in this application is to identify areas where mosquitoes are likely to lay their eggs and go through the immature stages of the life-cycle.  However, the general TWI was originally designed to model surface water flow and not necessarily to identify areas where water will pool. A simpler algorithm for identifying only areas where water is likely to pool may perform as well, or better, than a general TWI algorithm and would not require specialized GIS software for implementation.  To examine this, we implement 2 different algorithms which differ in their calculation of the up-slope area and local slope: 1) the SAGA Wetness Index (\cite{Bohner2002}) (hereafter "general TWI"), and 2) a simplified topographic wetness index which simply identifies depressions without regard to up-slope area (hereafter "restricted TWI").  \\


We carried out all analyses using the statistical programming language R version 3.2.3 (\cite{RCoreTeam2015}), with the exception of the SAGA TWI which was calculated with the SAGA open-source GIS software (\cite{Bohner2006}).  Details for calculation of the general TWI are available in the software documentation available at http://www.saga-gis.org (\cite{Conrad2015}).  The method involves, for every point on the landscape:  calculating the up-slope area from which water will flow to the point,  calculating the catchment area, and the slope of the catchment area.  Areas with a larger up-slope area and a smaller catchment area slope are predicted to have more water accumulation.\\

In contrast to the relatively complicated calculation of a general TWI, we suggest a simple model based on identifying depressions with low outflow and disregarding the up-slope area.  We first identify depressions and valleys by identifying pixels which are lower than the average of their neighbors.  We do this by first calculating the average elevation of the surrounding pixels for each pixel ($p$) in the landscape at three resolutions of increasing size:  

$$\mu_{i,j} = \frac{\sum_{p \in j}e_p}{|p \in j|},$$

where $\mu_{i,j}$ is the average elevation of the pixels in the window of size $j$ surrounding pixel $i$.  The size of the windows is somewhat arbitrary but the idea is to identify small depressions from large ones so we suggest $90m \times 90m$, $210m \times 210m$, and $330m \times 330m$.  These sizes may be adjusted or tuned to a particular landscape if information is available to do so.  We then subtract the mean elevation from the actual elevation at each pixel from the three calculated averages and sum these differences.\\

$$\delta e_{i,j} = e_i - \mu_{i,j} $$
$$\Delta e_{i} = \sum_{j \in 1,2,3} \delta e_{i,j}$$

We then identify areas with low outflow by calculating the variance of the aspects (direction the slope faces) of neighboring pixels, $\theta$.  Since aspect is measured on a circular scale from 1 to 360 the variance of two aspects which are in fact quite close to each other but on opposite sides of the circular scale reset at 360 would be artificially high.  For example, the aspect of two points facing close to due north could be 359 and 1.  The variance of these two points would be $var(359,1)= 64082$.  However, the variance of two aspects of equal distance but not on opposite sides of the circular reset would be $var(1,3) = 2$.  In order to mitigate this difficulty we first translate each aspect to a cardinal direction denoted 1, 2, 3, or 4. We then calculate the variance of the aspects of the cells in each of 3 moving windows the same size as above ($90m \times 90m$, $210m \times 210m$, and $330m \times 330m$) and sum the resulting variances for each pixel:

$$\theta_{i} = \sum_{j \in 1,2,3} var(a_{i \in j}),$$

where $a_{i \in j}$ are the set of aspects in the moving window $j$  around pixel $i$.  The final wetness index is then calculated as, 
$$w_i = -1 \times \Delta e_i \times \theta_i.$$

Relatively large positive values of $w_i$ are expected to have higher wetness than small positive numbers.  Negative numbers indicate a ridge or peak and are therefore expected to be dry.\\
 

We assign each household a risk for exposure to mosquitoes (exposure risk hereafter) by deriving a continuous risk surface over the study area from each TWI algorithm.  We assume the mosquito exposure risk of a household is inversely related to the distance to one or more of these high-wetness areas.  Therefore,  we apply a Gaussian filter with $\sigma = 10$ to create a weighted average of mosquito risk for each cell in the study area.  The Gaussian filter is an isometric 2-dimensional smoothing function with a Gaussian kernel.  The value of $\sigma$ determines the degree of smoothing and should be scaled appropriately to match the resolution of the data.  The value of $\sigma$ can be tuned for a specific application if data is available and appropriate to do so. Each house is then assigned the risk score of the cell it is in or, for high resolution topographical data such as LiDAR (laser radar), the average of the cells a property occupies.\\


\subsection{Individual Health Risk}
Each household varied with respect to both the risk of exposure to mosquitoes and the number of at-risk individuals in the household. The household risk formulas will vary depending on the disease under study and the most vulnerable population(s) for that disease.  We recommend a simple additive risk score, like the score formula provided below developed for malaria, based on expert opinion or relevant literature. The sole purpose of the health risk score is to differentiate households with high risk from those with low risk.  More complicated formulas can be constructed but we believe a simple formula will be easier to interpret and adequate for most applications.\\

\subsection{Overall Risk}

To be at risk for a poor outcome a person must 1) come in contact with a disease harboring mosquito,  and 2) be inherently vulnerable to infection (e.g. very young or pregnant).  We create two risk scores representing each of these types of risk for every household on the landscape.  Since these risks will be calculated on different scales we center at 0 and standardize risk scores so that they are scale-independent.  These two scores can then be combined with a weighted sum to create an overall risk score for the household.  Weights in the sum are determined by expert opinion, in our example below we use equal weights.  This method lends itself well to the addition of additional risk scores, such as the distance to a health care provider, or even risk attenuating factors such as the presence of window screens, which can all be summed together with appropriate weights. 


<<r importNewData, echo = FALSE, message = FALSE, results = 'asis', warning = FALSE, cache = TRUE>>= 
rm(list = ls())
library(car)
library(ggplot2)
library(ggmap)
library(MASS)
library(plyr)
library(dplyr)
library(xtable)
hdat <- read.csv("C:/Classes/AppliedBiostat/Project/housedata.csv")
sumdat <- hdat
sumdat$net <- factor(ifelse(is.na(sumdat$net), NA, ifelse(sumdat$net == 0, "No", "Yes")))
sumdat$under5f <- factor(ifelse(is.na(sumdat$under5), NA, ifelse(sumdat$under5 >= 1, "Yes", "No")))
sumdat$under1f <- factor(ifelse(is.na(sumdat$under1), NA, ifelse(sumdat$under1 >= 1, "Yes", "No")))
sumdat$under18f <- factor(ifelse(is.na(sumdat$under18), NA, ifelse(sumdat$under18 >= 1, "Yes", "No")))
sumdat$over65f <- factor(ifelse(is.na(sumdat$under18), NA, ifelse(sumdat$over65 >= 1, "Yes", "No")))
sumdat$periph <- factor(ifelse(is.na(sumdat$periph), NA, ifelse(sumdat$periph == 1, "Yes", "No")))
sumdat$hspray <- factor(ifelse(is.na(sumdat$hspray), NA, ifelse(sumdat$hspray == 0, "No", "Yes")))
sumdat$site <- factor(ifelse(is.na(sumdat$site), NA, ifelse(sumdat$site == 1, "High", "Low")))
sumdat[which(sumdat$site == "Low" & sumdat$lat>0), ]$site <- "High"#correct mis-labelled site
@


<<r CalcAgeRisk, echo = FALSE, cache = TRUE>>= 
sumdat$arisk <- with(sumdat, (2*under1)+under5)#+over65
sumdat$ariskstd <- scale(log(sumdat$arisk+1), center = F)
#for sensitivity analysis exclude elderly group
sumdat$arisks <- with(sumdat, (2*under1)+under5)
sumdat$ariskstds <- scale(log(sumdat$arisks+1), center = F)
@



\subsection{Example Analysis}

%Example Application
The government of Kenya developed the “National Malaria Strategy 2009-2017” in response to the ongoing threat of malaria (\cite{Ministryofpublichealthandsanitation2009}). This strategy outlined 6 objectives,  the first of which is “to have at least 80\% of people living in malaria risk areas using appropriate malaria preventive interventions.” The two primary non-pharmaceutical interventions identified in the plan are Indoor Residual Spraying (IRS) and Long Lasting Insecticidal Nets (LLINs). The strategy outlined for achieving the intervention objective included the initial mass distribution of LLINs where malaria is either endemic (western lowlands) or epidemic-prone (western highlands); followed by routine distribution of LLINs to pregnant women and children under 1 year of age and a subsidized sale of LLINs. The strategy also outlined the use of widespread IRS followed by focal treatments in epidemic-prone areas, i.e. areas where mosquitoes are likely to breed.  We use this information to evaluate our methodology.\\

% The World Health Organization recommends prioritizing the administration of interventions to pregnant women and young children followed by progressively achieving intervention coverage of all community members. The preferential administration of interventions to pregnant women and young children reflects the disproportionate disease burden borne by this group (\cite{Bousema2012}). However,  previous research has identified the benefit of additionally targeting interventions at those with the highest risk of infections (\cite{Schantz-Dunn2009}). Identifying individuals which are both vulnerable to infection and likely to be exposed to an infected mosquito is therefore a priority.  However, existing distribution campaigns do not typically account for both infection risk and disease burden simultaneously.\\

Prior to the initiation of a community-based research program,  two study sites in western Kenya were mapped and a census was taken. These two sites represent the western highland (hereafter “epidemic-prone”,  N = 3380) and lowland (hereafter “endemic”,  N = 604) populations. Our objective was to determine if the highest risk households were given preference in the administration of interventions in the form of both bed nets and indoor residual spraying.\\

We collected demographic information for each occupant including age and sex. Both sites have had partial treatment with both LLINs and IRS and household heads provided initial information about LLIN ownership and government administration of household IRS in the previous six months.  We assigned an individual-based health risk score (health risk hereafter) to each household with the following formula:

$$Health\ Risk\ Score  =  (2 \times \ Children\ \leq 1) + (1 < \ Children\  \leq 5) + (2 \times \ Pregnant\ Women)$$

We assigned twice the weight to children under 1 and pregnant women since they have been previously identified as high risk (\cite{Gupta1999, Snow1999, Menendez2000}).  This formula is tailored for malaria exposure but can be adjusted based on \emph{a priori} information about the individual risks for a particular mosquito borne disease. For example, for the West Nile virus those of age 65 years and older may have an increased. risk of neurological symptoms and permanent neural damage.\\

We added the standardized household health risk with the standardized household exposure risk to create a combined risk.  We then determined if high risk households are more likely to have received either a bed-net or indoor residual spraying with a logistic model;

$$log(\frac{p}{1-p}) = \beta_0 + \beta_1 \times \ Combined\ Household\ Risk, $$

where $p$  =  Probability of a house having a treatment.  If $e^{\beta_1}$ is $>$ 1 and statistically significant ($\alpha = 0.05$) then high-risk households are more likely to receive treatment.  %We used a restricted cubic spline function to determine if there was a linear relationship between the log odds of treatment and combined risk.  
We modeled the high and low sites separately because these sites differed substantially in topography, level of malaria transmission, and intervention administration protocols.  We also modeled the two interventions separately since they are administered under different protocols.  Finally, in order to examine the utility of each TWI algorithm, we repeated the analysis using both the general and restricted TWI.\\  %If we found evidence of a non-linear relationship we categorized the risk score into quartiles and re-fit with a means model. 


<<getDEM, echo = FALSE, message = FALSE, message = FALSE, results = 'hide', warning = FALSE, cache = TRUE>>= 
#read in the digital elevation data
library(raster, quietly = TRUE, warn.conflicts = FALSE)
library(rgdal)
demlow <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 34.98, lat = -.08)
demlow2 <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 35.98, lat = -.08)
demhigh <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 34.965, lat = .2)
lowel <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_43_13.tif")
lowel2 <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_44_13.tif")
highel <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_43_12.tif")
#shrink area
lowext <- extent(34.950000, 35.00042, -0.110000, -0.050000)
lowel <- crop(demlow, lowext, "C:/Classes/AppliedBiostat/Project/LowSiteData", overwrite = TRUE)
lowext2 <- extent(35.000000, 35.020000, -0.110000, -0.050000)
lowel2 <- crop(demlow2, lowext2, "C:/Classes/AppliedBiostat/Project/LowSiteData2", overwrite = TRUE)
highext <- extent(34.900000, 35.000417, 0.150000, 0.250000)
highel <- crop(demhigh, highext, "C:/Classes/AppliedBiostat/Project/HighSiteData", overwrite = TRUE)

lowelcomp <- merge(lowel, lowel2)
writeGDAL(as(lowelcomp, "SpatialPixelsDataFrame"), fname = "LowDEM.tif")
writeGDAL(as(highel, "SpatialPixelsDataFrame"), fname = "HighDEM.tif")

lowsite <- sumdat[sumdat$site == "Low", ]
lowp <- data.frame(rasterToPoints(lowelcomp))

highsite <- sumdat[sumdat$site == "High", ]
highp <- data.frame(rasterToPoints(highel))
names(highp)[3]  <-  "layer"
rm(lowel2, lowel)
@

<<computeSWI, echo = FALSE, message = FALSE, warning = FALSE, results = 'hide', warning = FALSE, cache = TRUE>>= 
# library(RSAGA)
# rsgenv <- rsaga.env(path = "C:\\Classes\\AppliedBiostat\\Project\\saga_2.1.4_Win32", check.libpath = FALSE, check.SAGA = FALSE, check.os.default = FALSE, modules = "C:\\Classes\\AppliedBiostat\\Project\\saga_2.1.4_Win32\\modules")
# rsaga.import.gdal("LowSiteData.grd", env = rsgenv)
lowTWI <- readGDAL("C:/Classes/AppliedBiostat/Project/LowTWI.tif")#TWI calculated by SAGA
highTWI <- readGDAL("C:/Classes/AppliedBiostat/Project/HighTWI.tif")
lowt <- data.frame(lowTWI)
# ggplot(data = lowt, aes(x = x, y = y))+geom_raster(aes(fill = band1))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = -8,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")#+ geom_point(aes(x = lon,  y = lat, color = hspray), data = lowsite[-565, ])+scale_colour_manual("Spray", values = c("green", "blue"))
# 
hight <- data.frame(highTWI)
# ggplot(data = hight, aes(x = x, y = y))+geom_raster(aes(fill = band1))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = -5,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")#+ geom_point(aes(x = lon,  y = lat, color = hspray), data = highsite)+scale_colour_manual("Spray", values = c("red", "blue"))
@

<<computeSimpleTWI, echo = FALSE, message = FALSE, results = 'hide', warning = FALSE, cache = TRUE>>=
library(SDMTools)
#calculate elevation variance
#first get diff from mean to deterime if it is a dip or a peak
#create 3 different windows for calculating dips,  this will account for drainage area to some extent
meanmat3 <- matrix(1/9, 3, 3)
meanmat7 <- matrix(1/49, 7, 7)
meanmat11 <- matrix(1/121, 11, 11)
#find dips at these three different windows, default function for focal is sum() 
meanel3 <- focal(lowelcomp, w = meanmat3)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff3 <- lowelcomp-meanel3
values(meandiff3) <- ifelse(values(meandiff3)<0, values(meandiff3), 0)

meanel7 <- focal(lowelcomp, w = meanmat7)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff7 <- lowelcomp-meanel7
values(meandiff7) <- ifelse(values(meandiff7)<0, values(meandiff7), 0)

meanel11 <- focal(lowelcomp, w = meanmat11)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff11 <- lowelcomp-meanel11
values(meandiff11) <- ifelse(values(meandiff11)<0, values(meandiff11), 0)

lowdips <- meandiff3+meandiff7+meandiff11

#calculate aspect of each cell
lowasp <- aspect(lowelcomp, latlon = TRUE)
lowaspc <- lowasp
#categorize into quadrants
values(lowaspc) <- ifelse(values(lowasp)>45 & values(lowasp)  <=  135, 1, 
                        ifelse(values(lowasp)>135 & values(lowasp)  <=  225, 2, 
                               ifelse(values(lowasp)>225 & values(lowasp)  <=  315, 3, 
                                      ifelse(values(lowasp)>315 & values(lowasp)  <= 360, 4, 
                                             ifelse(values(lowasp)>0 & values(lowasp)  <=  45, 4, NA)))))
#Calculate aspect variance
aspmat3 <- matrix(1, 3, 3)
aspmat7 <- matrix(1, 7, 7)
aspmat11 <- matrix(1, 11, 11)
aspvar3 <- focal(lowaspc, aspmat3, fun = var, na.rm = T)
aspvar7 <- focal(lowaspc, aspmat7, fun = var, na.rm = T)
aspvar11 <- focal(lowaspc, aspmat11, fun = var, na.rm = T)

lowaspvar <- aspvar3+aspvar7+aspvar11
lowtwi <- lowaspvar*lowdips*-1

#repeat for High site
meanel3 <- focal(highel, w = meanmat3)#, pad = T, pad.value = mean(values(highel)))
meandiff3 <- highel-meanel3
values(meandiff3) <- ifelse(values(meandiff3)<0, values(meandiff3), 0)

meanel7 <- focal(highel, w = meanmat7)#, pad = T, pad.value = mean(values(highel)))
meandiff7 <- highel-meanel7
values(meandiff7) <- ifelse(values(meandiff7)<0, values(meandiff7), 0)

meanel11 <- focal(highel, w = meanmat11)#, pad = T, pad.value = mean(values(highel)))
meandiff11 <- highel-meanel11
values(meandiff11) <- ifelse(values(meandiff11)<0, values(meandiff11), 0)

highdips <- meandiff3+meandiff7+meandiff11

#Repeat for High site
highasp <- aspect(highel, latlon = TRUE)
highaspc <- highasp
#categorize into quadrants to generall classify the way the slope is facing
values(highaspc) <- ifelse(values(highasp)>45 & values(highasp)  <=  135, 1, 
                        ifelse(values(highasp)>135 & values(highasp)  <=  225, 2, 
                               ifelse(values(highasp)>225 & values(highasp)  <=  315, 3, 
                                      ifelse(values(highasp)>315 & values(highasp)  <= 360, 4, 
                                             ifelse(values(highasp)>0 & values(highasp)  <=  45, 4, NA)))))
#Calculate aspect variance
aspmat3 <- matrix(1, 3, 3)
aspmat7 <- matrix(1, 7, 7)
aspmat11 <- matrix(1, 11, 11)
aspvar3 <- focal(highaspc, aspmat3, fun = var, na.rm = T)
aspvar7 <- focal(highaspc, aspmat7, fun = var, na.rm = T)
aspvar11 <- focal(highaspc, aspmat11, fun = var, na.rm = T)

highaspvar <- aspvar3+aspvar7+aspvar11
hightwi <- highaspvar*highdips*-1

#write the rasters to file
# writeRaster(hightwi, "HighSiteTWI.tiff")
# writeRaster(lowtwi, "LowSiteTWI.tiff")

#plot restricted TWI
htwi <- as.data.frame(hightwi, xy = TRUE)
ltwi <- as.data.frame(lowtwi, xy = TRUE)
# ggplot(data = ltwi[complete.cases(ltwi), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = 15,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")
# # 
# ggplot(data = htwi[complete.cases(htwi), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = max(htwi$layer, na.rm = TRUE)/2,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")
rm(aspvar3, aspvar7, aspvar11, highaspvar, lowaspvar, highdips, lowdips, highaspc, lowaspc, meandiff3, meandiff7, meandiff11, meanel3, meanel7, meanel11)
@

<<CalculateBevinTWI, echo = FALSE, message = FALSE, warning = FALSE, eval = FALSE, cache = TRUE>>=
library(dynatopmodel)
res(lowelcomp) <- as.numeric(yres(lowelcomp))
# lowelcompP <- raster::setValues(lowelcomp, topmodel::sinkfill(raster::as.matrix(lowelcomp), res = xres(lowelcomp), degree = .001))
lowcompP <- as.matrix(lowelcomp)
while(TRUE){
lowcompP <- topmodel::sinkfill(raster::as.matrix(lowelcomp), res = xres(lowelcomp), degree = 0.1)
  }
lowelcompS <- raster::setValues(lowelcomp, )
}

lowTWIb <- upslope.area.custom(lowelcomp, atb = TRUE)
sp::plot(lowTWIb, main=c("Upslope area (log(m^2/m))", "TWI log(m^2/m)"))
highTWIb <- upslope.area.custom(highel, atb = TRUE)
sp::plot(highTWIb, main=c("Upslope area (log(m^2/m))", "TWI log(m^2/m)"))
@

<<smoothTWI, echo = FALSE, cache = TRUE>>= 
#use focal to create moving window with gaussian weights for assiging household risk
#create filter for focal window
r <- raster(ncols = 36, nrows = 36, xmn = 0)
#convert TWI to raster
lowtr <- raster(lowTWI, layer = "band1")
hightr <- raster(highTWI, layer = "band1")
fmat <- focalWeight(r, d = 10, type = 'Gauss')
mriskLow <- focal(lowtr, fmat, filename = 'C:/Classes/AppliedBiostat/Project/smoothLowTWI', pad = T, padValue = median(lowt$band1), overwrite = T)
mriskHigh <- focal(hightr, fmat, filename = 'C:/Classes/AppliedBiostat/Project/smoothHighTWI', pad = T, padValue = median(hight$band1), overwrite = T)

#Write to file
# writeRaster(mriskHigh, "HighSite_MosquitoRisk.tiff")
# writeRaster(mriskLow, "LowSite_MosquitoRisk.tiff")
@

<<PlotTWI, echo = FALSE, eval = FALSE, cache = TRUE>>= 
lowtrp <- as.data.frame(mriskLow, xy = T)
hightrp <- as.data.frame(mriskHigh, xy = T)
infectLow <- ggplot(data = lowtrp[complete.cases(lowtrp), ], aes(x = x, y = y)) + 
  geom_raster(aes(fill = layer)) + 
  scale_fill_gradient2("Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  -12,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") + 
  theme(legend.position = 'bottom') + 
  geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9) + 
  xlab("Longitute") + ylab("Latitude")

infectHigh <- ggplot(data = hightrp[complete.cases(hightrp), ], aes(x = x, y = y)) + 
  geom_raster(aes(fill = layer)) + 
  scale_fill_gradient2("Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(hightrp$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") + 
  theme(legend.position = 'bottom') + 
  geom_point(aes(x = lon,  y = lat), data = highsite, alpha = 0.8) + 
  xlab("Longitute") + ylab("Latitude")

library(gridExtra)
grid.arrange(infectLow, infectHigh, ncol = 2)
@

<< assignRisktoHouse, echo = FALSE, cache = TRUE>>= 
lowsite$mrisk <- extract(mriskLow, y = cbind(lowsite$lon, lowsite$lat))
highsite$mrisk <- extract(mriskHigh, y = cbind(highsite$lon, highsite$lat))
#Standardize the risk scores
lowsite$mriskpos <- lowsite$mrisk+abs(min(lowsite$mrisk, na.rm = T))
highsite$mriskpos <- highsite$mrisk+abs(min(highsite$mrisk, na.rm = T))
lowsite$mriskstd <- scale(log(lowsite$mriskpos+1), center = F)
highsite$mriskstd <- scale(log(highsite$mriskpos+1), center = F)
@

<<plotMrisk, echo = FALSE, eval = FALSE, cache = TRUE>>= 
ggplot(data = lowp, aes(x = x, y = y)) + 
  geom_raster(aes(fill = layer)) +
  scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
  geom_point(aes(x = lon,  y = lat, color = mriskstd), data = lowsite[-565, ], alpha = 0.9) +
  scale_colour_gradient("Mosquito Risk", low = "blue", high = "red")

ggplot(data = highp, aes(x = x, y = y)) + 
  geom_raster(aes(fill = layer)) +
  scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1714,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
  geom_point(aes(x = lon,  y = lat, color = mriskstd), data = highsite, alpha = 0.8) + 
  scale_colour_gradient("Mosquito Risk", low = "blue", high = "red")
@

<<plotArisk, echo = FALSE, eval = FALSE, cache = TRUE>>= 
ggplot(data = lowp, aes(x = x, y = y)) +
  geom_raster(aes(fill = layer)) +
  scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") + 
  geom_point(aes(x = lon,  y = lat, color = arisk), data = lowsite[-565, ], alpha = 0.9) + 
  scale_colour_gradient("Age Risk", low = "blue", high = "red")

ggplot(data = highp, aes(x = x, y = y)) + 
  geom_raster(aes(fill = layer)) +
  scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1714,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
  geom_point(aes(x = lon,  y = lat, color = arisk), data = highsite, alpha = 0.8) +
  scale_colour_gradient("Age Risk", low = "blue", high = "red")

lowp$site  <-  "Endemic"
highp$site  <-  "Epidemic"
pdat  <-  rbind(lowp,  highp)
@

<<CombinedRisk, echo = FALSE, cache = TRUE>>= 
lowsite$comrsk <- lowsite$mriskstd+lowsite$arisk
highsite$comrsk <- highsite$mriskstd+highsite$arisk
lowsite$site  <-  "Endemic"
highsite$site  <-  "Epidemic"
sitedat  <-  rbind(lowsite[-565, ],  highsite)
@

<<plotCombrisk, echo = FALSE, fig.height = 3, fig.width = 3, eval = FALSE>>= 
lowComb <- ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer)) +
  scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
  geom_point(aes(x = lon,  y = lat, color = comrsk), data = lowsite[-565, ], alpha = 0.9)+scale_colour_gradient("Combined Risk", low = "blue", high = "red") +
  theme(legend.position = 'bottom', legend.box = 'horizontal')

highComb <- ggplot(data = highp, aes(x = x, y = y)) +
  geom_raster(aes(fill = layer)) +
  scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1714,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") + 
  geom_point(aes(x = lon,  y = lat, color = comrsk), data = highsite, alpha = 0.8) +
  scale_colour_gradient("Combined Risk", low = "blue", high = "red")+theme(legend.position = 'bottom', legend.box = 'horizontal')

library(gridExtra)
grid.arrange(lowComb, highComb, ncol = 2)

highm <-  get_googlemap(center = c(34.965, .2),  zoom  =  13,  maptype = "terrain", filename = "c:/Classes/AppliedBiostat/HighSite")
highmap  <-  ggmap(highm) + geom_point(aes(x = lon,  y = lat, color = comrsk),  data = highsite,  alpha = 0.8) + scale_colour_gradient("Combined Risk",  low = "blue",  high = "red") + theme(legend.position = 'bottom', legend.box = 'horizontal')

lowm <-  get_googlemap(center = c(34.98, -.08),  zoom  =  14,  maptype = "terrain", filename = "c:/Classes/AppliedBiostat/LowSite")
lowmap  <-  ggmap(lowm) + geom_point(aes(x = lon,  y = lat, color = comrsk),  data = lowsite[-565, ],  alpha = 0.9) + scale_colour_gradient("Combined Risk",  low = "blue",  high = "red") + theme(legend.position = 'bottom',  legend.box = 'horizontal')

grid.arrange(lowmap,  highmap,  ncol = 2)
@

<<checkLinearityAssumption, echo = FALSE, results = 'hide', eval = FALSE>>= 
lowsite$hspray <- ifelse(lowsite$hspray == "No", 0, 1)
lowsite$net <- ifelse(lowsite$net == "No", 0, 1)
highsite$hspray <- ifelse(highsite$hspray == "No", 0, 1)
highsite$net <- ifelse(highsite$net == "No", 0, 1)

rcspline.plot(lowsite$comrsk, lowsite$net, model = "logistic", xlab = "Combined Risk", ylab = "Log Odds Net Use")#evidence of non-linearity (u-shape)
rcspline.plot(highsite$comrsk, highsite$net, model = "logistic", xlab = "Combined Risk")
rcspline.plot(lowsite$comrsk, lowsite$hspray, model = "logistic")
rcspline.plot(highsite$comrsk, highsite$hspray, model = "logistic")

rcspline.plot(lowsite$arisk, lowsite$net, model = "logistic")
rcspline.plot(highsite$arisk, highsite$net, model = "logistic")

rcspline.plot(lowsite$arisk, lowsite$hspray, model = "logistic")
rcspline.plot(highsite$arisk, highsite$hspray, model = "logistic")

rcspline.plot(lowsite$mrisk, lowsite$net, model = "logistic")
rcspline.plot(highsite$mrisk, highsite$net, model = "logistic", xlab = "Mosquito Risk")#evidence of non-linearity increasing,  leveling off then slight decrease
rcspline.plot(lowsite$mrisk, lowsite$hspray, model = "logistic")
rcspline.plot(highsite$mrisk, highsite$hspray, model = "logistic", xlab = "Mosquito Risk")#evidence of non-linearity (increasing then leveling off)
@

<<model1, echo = FALSE, cache = TRUE>>= 
m1ls <- glm(hspray~comrsk, data = lowsite, family = "binomial")
m1ls.est <- c(exp(summary(m1ls)$coef[2, 1]), exp(summary(m1ls)$coef[2, 1]-1.96*summary(m1ls)$coef[2, 2]), exp(summary(m1ls)$coef[2, 1]+1.96*summary(m1ls)$coef[2, 2]))
m1ln <- glm(net~comrsk, data = lowsite, family = "binomial")
m1ln.est <- c(exp(summary(m1ln)$coef[2, 1]), exp(summary(m1ln)$coef[2, 1]-1.96*summary(m1ln)$coef[2, 2]), exp(summary(m1ln)$coef[2, 1]+1.96*summary(m1ln)$coef[2, 2]))
#adjust for non-linearity
lq1 <- quantile(lowsite$comrsk, prob = .25)
lq2 <- quantile(lowsite$comrsk, prob = .5)
lq3 <- quantile(lowsite$comrsk, prob = .75)
lowsite$comrsk_q <- ifelse(lowsite$comrsk  <=  lq1, 1, ifelse(lowsite$comrsk>lq1 & lowsite$comrsk <= lq2, 2, ifelse(lowsite$comrsk>lq2 & lowsite$comrsk <= lq3, 3, 4)))
m1lnq <- glm(net~factor(comrsk_q), data = lowsite, family = "binomial")
# summary(m1lnq)

m1hs <- glm(hspray~comrsk, data = highsite, family = "binomial")
m1hs.est <- c(exp(summary(m1hs)$coef[2, 1]), exp(summary(m1hs)$coef[2, 1]-1.96*summary(m1hs)$coef[2, 2]), exp(summary(m1hs)$coef[2, 1]+1.96*summary(m1hs)$coef[2, 2]))
m1hn <- glm(net~comrsk, data = highsite, family = "binomial")
m1hn.est <- c(exp(summary(m1hn)$coef[2, 1]), exp(summary(m1hn)$coef[2, 1]-1.96*summary(m1hn)$coef[2, 2]), exp(summary(m1hn)$coef[2, 1]+1.96*summary(m1hn)$coef[2, 2]))

Treatment <- rep(c("Net", "Spray"), 2)
Site <- c("High", "", "Low", "")
outmat <- round(matrix(c(m1hn.est, m1hs.est, m1ln.est, m1ls.est), 4, 3, byrow = T), 2)
colnames(outmat) <- c("OR", "Lower 95% CI", "Upper 95% CI")
obj1out <- cbind(Site, Treatment, outmat)
@

\subsection{Results}
The odds of receiving either a bed net or indoor residual spraying were higher for households with higher combined risk,  but only at the high site (\ref{ORcmb}).  For each 1 standard deviation increase in combined risk at the high site the probability of receiving a bed net increased 27\% (OR: 1.27,  95\% CI: 1.18,  1.35) and the probability of indoor residual spraying increased 15\% (OR: 1.15,  95\% CI: 1.03,  1.29).  At the low site,  we found no preferential administration of either treatment to high combined risk households.  We found some evidence,  from the fitting of a restricted cubic spline,  of a non-linear relationship between the log-odds of net use and combined risk at the low site.  However,  accounting for non-linearity in the model did not change the results so we only report the linear model here.\\ 

The probability of bed net use at the high site was more strongly associated with health risk,  whereas the probability of indoor residual spraying at the high site was more strongly associated with exposure risk (\ref{ORtrt}).  However,  We did not find the same pattern at the low site where we found households with high exposure risk were actually significantly less likely to receive indoor residual spraying (OR: 0.35,  95\% CI: 0.14,  0.83).  \\

<<Obj1Table, echo = FALSE, results = 'asis', eval = FALSE>>= 
print(xtable(obj1out, caption = "Odds of receiving a treatment as a function of combined risk.", label = "ORcmb"), include.rownames = FALSE)
@

\begin{table}[ht]
\centering
\begin{tabular}{lllll}
  \hline 
Site & Treatment & OR & Lower 95\% CI & Upper 95\% CI \\ 
  \hline
High & Net & 1.35 & 1.26 & 1.44 \\ 
   & Spray & 1.13 & 1.00 & 1.26 \\ 
  Low & Net & 1.09 & 0.86 & 1.39 \\ 
   & Spray & 0.9 & 0.61 & 1.34 \\ 
   \hline
\end{tabular}
\caption{Odds of receiving a treatment as a function of combined risk.} 
\label{ORcmb}
\end{table}


<<SepModels, echo = FALSE, cache = TRUE>>= 
#Separate model for each risk type
m2als <- glm(hspray~arisk, data = lowsite, family = "binomial")
m2als.est <- c(exp(summary(m2als)$coef[2, 1]), exp(summary(m2als)$coef[2, 1]-1.96*summary(m2als)$coef[2, 2]), exp(summary(m2als)$coef[2, 1]+1.96*summary(m2als)$coef[2, 2]))
m2aln <- glm(net~arisk, data = lowsite, family = "binomial")
m2aln.est <- c(exp(summary(m2aln)$coef[2, 1]), exp(summary(m2aln)$coef[2, 1]-1.96*summary(m2aln)$coef[2, 2]), exp(summary(m2aln)$coef[2, 1]+1.96*summary(m2aln)$coef[2, 2]))
m2mls <- glm(hspray~mrisk, data = lowsite, family = "binomial")
m2mls.est <- c(exp(summary(m2mls)$coef[2, 1]), exp(summary(m2mls)$coef[2, 1]-1.96*summary(m2mls)$coef[2, 2]), exp(summary(m2mls)$coef[2, 1]+1.96*summary(m2mls)$coef[2, 2]))
m2mln <- glm(net~mrisk, data = lowsite, family = "binomial")
m2mln.est <- c(exp(summary(m2mln)$coef[2, 1]), exp(summary(m2mln)$coef[2, 1]-1.96*summary(m2mln)$coef[2, 2]), exp(summary(m2mln)$coef[2, 1]+1.96*summary(m2mln)$coef[2, 2]))

m2ahs <- glm(hspray~arisk, data = highsite, family = "binomial")
m2ahs.est <- c(exp(summary(m2ahs)$coef[2, 1]), exp(summary(m2ahs)$coef[2, 1]-1.96*summary(m2ahs)$coef[2, 2]), exp(summary(m2ahs)$coef[2, 1]+1.96*summary(m2ahs)$coef[2, 2]))
m2ahn <- glm(net~arisk, data = highsite, family = "binomial")
m2ahn.est <- c(exp(summary(m2ahn)$coef[2, 1]), exp(summary(m2ahn)$coef[2, 1]-1.96*summary(m2ahn)$coef[2, 2]), exp(summary(m2ahn)$coef[2, 1]+1.96*summary(m2ahn)$coef[2, 2]))
m2mhs <- glm(hspray~mrisk, data = highsite, family = "binomial")
m2mhs.est <- c(exp(summary(m2mhs)$coef[2, 1]), exp(summary(m2mhs)$coef[2, 1]-1.96*summary(m2mhs)$coef[2, 2]), exp(summary(m2mhs)$coef[2, 1]+1.96*summary(m2mhs)$coef[2, 2]))
m2mhn <- glm(net~mrisk, data = highsite, family = "binomial")
m2mhn.est <- c(exp(summary(m2mhn)$coef[2, 1]), exp(summary(m2mhn)$coef[2, 1]-1.96*summary(m2mhn)$coef[2, 2]), exp(summary(m2mhn)$coef[2, 1]+1.96*summary(m2mhn)$coef[2, 2]))

sepmat <- round(matrix(c(m2ahn.est, m2mhn.est, m2ahs.est, m2mhs.est, m2aln.est, m2mln.est, m2als.est, m2mls.est), 4, 6, byrow = T), 2)
colnames(sepmat) <- c(rep("Age Risk", 3), rep("Mosq. Risk", 3))
est <- c("", "", rep(c("OR", "Lower 95% CI", "Upper 95% CI"), 2))
sepout <- cbind(Site, Treatment, sepmat)
sepout <- rbind(est, sepout)
rownames(sepout) <- 1:nrow(sepout)
@

<<objective2Table, echo = FALSE, results = 'asis', eval = FALSE>>= 
print(xtable(sepout, caption = "Odds of treatment from risk of either mosquito exposure or malaria risk.", label = "ORtrt"), include.rownames = FALSE)
@
\begin{table}[ht]
\centering
\begin{tabular}{llllllll}
  \hline
 &  & \multicolumn{3}{l}{Health Risk} & \multicolumn{3}{l}{Exposure Risk}  \\ 
  
Site & Treatment & OR & Lower 95\% CI & Upper 95\% CI & OR & Lower 95\% CI & Upper 95\% CI \\ 
 \hline
  High & Net & 1.36 & 1.27 & 1.45 & 1.01 & 0.93 & 1.10 \\ 
   & Spray & 1.08 & 0.96 & 1.22 & 1.32 & 1.14 & 1.53 \\ 
  Low & Net & 1.21 & 0.94 & 1.55 & 0.58 & 0.31 & 1.10 \\ 
   & Spray & 1.08 & 0.67 & 1.74 & 0.34 & 0.15 & 0.79 \\ 
   \hline
\end{tabular}
\caption{Odds of treatment from risk of either mosquito exposure or malaria risk.} 
\label{ORtrt}
\end{table}

<<smoothTWI_sens, echo = FALSE, cache = TRUE>>= 
#use focal to create moving window with gaussian weights for assiging household risk
# create filter for focal window
r <- raster(ncols = 36, nrows = 36, xmn = 0)
#convert TWI to raster
lowtr_s <- lowtwi
hightr_s <- hightwi
fmat <- focalWeight(r, d = 10, type = 'Gauss')
mriskLows <- focal(lowtr_s, fmat, filename = 'smoothLowTWI_sens', pad = T, padValue = median(lowt$band1), overwrite = T)
mriskHighs <- focal(hightr_s, fmat, filename = 'smoothHighTWI_sens', pad = T, padValue = median(hight$band1), overwrite = T)
@

<<plotTWI_Sens, echo = FALSE, eval = FALSE>>= 
lowtrps <- as.data.frame(mriskLows, xy = T)
hightrps <- as.data.frame(mriskHighs, xy = T)
lowtrps$stdrsk <- base::scale(lowtrps$layer)
hightrps$stdrsk <- base::scale(hightrps$layer)

TWIlowSens <- ggplot(data = lowtrps[complete.cases(lowtrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Unscaled Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(lowtrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9, pch = 1)+ggtitle("Endemic Site")+xlab("Longitude")+ylab("Latitude")

TWIhighSens <- ggplot(data = hightrps[complete.cases(hightrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(hightrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = highsite[-which(highsite$lon == max(highsite$lon)), ], alpha = 0.8, pch = 1)+ggtitle("Epidemic-prone Site")+xlab("Longitude")+ylab("Latitude")
library(gridExtra)
grid.arrange(TWIlowSens, TWIhighSens, ncol = 2)
#ggsave(filename = "C:/Classes/AppliedBiostat/Manuscript/TWIPanelSens.emf", width = 6, height = 3, units = "in")
@


<<assignRisktoHouse_sens, echo = FALSE, cache = TRUE>>= 
lowsite$mrisks <- extract(mriskLows, y = cbind(lowsite$lon, lowsite$lat))
highsite$mrisks <- extract(mriskHighs, y = cbind(highsite$lon, highsite$lat))
#Standardize the risk scores
lowsite$mriskstds <- scale(log(lowsite$mrisks+1), center = F)
highsite$mriskstds <- scale(log(highsite$mrisks+1), center = F)
@

<<plotMrisk_sens, echo = FALSE, eval = FALSE>>= 
lowInfect <- ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = mrisks), data = lowsite, alpha = 0.9)+scale_colour_gradient("Infection Risk", low = "blue", high = "red")

highInfect <- ggplot(data = highp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1714,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = mrisks), data = highsite, alpha = 0.8)+scale_colour_gradient("Infection Risk", low = "blue", high = "red")

@


<<CombinedRisk_sens, echo = FALSE, cache = TRUE>>= 
lowsite$comrsks <- scale(log(lowsite$mrisks+1), center = F)+scale(log(lowsite$arisk+1), center = F)
highsite$comrsks <- scale(log(highsite$mrisks+1), center = F)+scale(log(highsite$arisk+1), center = F)
both <- rbind(lowsite[, -34], highsite)
@

<<plotCombrisk_sens, echo = FALSE, fig.height = 7, fig.width = 7, eval = FALSE>>= 

lowCombined <- ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = comrsks), data = lowsite, alpha = 0.9)+scale_colour_gradient("Combined Risk", low = "blue", high = "red")+theme_bw()+theme(legend.position = 'bottom', legend.box = 'horizontal')+ylim(c(-.1, -.06))+xlim(c(34.96, 35.01))+ylab("Latitude")+xlab("Longitude")+ggtitle("Endemic Site")

highcombined <- ggplot(data = highp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1714,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = comrsks), data = highsite, alpha = 0.8)+scale_colour_gradient("Combined Risk", low = "blue", high = "red")+theme_bw()+theme(legend.position = 'bottom', legend.box = 'horizontal')+ylab("Latitude")+xlab("Longitude")+ggtitle("Epidemic-prone Site")


grid.arrange(lowCombined, highcombined, ncol = 2)

#density plots
#make idealized intervention
both <- both[-3142, ]
probs <- both$comrsks/max(both$comrsks, na.rm = T)
both$ideal <- rbinom(dim(both)[1], 1, prob = probs)
both$Site <- ifelse(both$site == "Low", "Endemic", "Epidemic-Prone")
netplot <- ggplot(data = both, aes(x = comrsks))+geom_density(aes(fill = factor(net)), alpha = .6, adjust = 2)+facet_wrap(~Site)+theme_bw()+xlab("Standardized Combined Risk")+scale_fill_manual("LLIN Usage", values = c("red", "blue"), labels = c("No", "Yes"))
sprayplot <- ggplot(data = both, aes(x = comrsks))+geom_density(aes(fill = factor(hspray)), alpha = .6, adjust = 2)+facet_wrap(~Site)+theme_bw()+xlab("Standardized Combined Risk")+scale_fill_manual("IRS Usage", values = c("red", "blue"), labels = c("No", "Yes"))
idealplot <- ggplot(data = both, aes(x = comrsks))+geom_density(aes(fill = factor(ideal)), alpha = .6, adjust = 2)+facet_wrap(~Site)+theme_bw()+xlab("Standardized Combined Risk")+scale_fill_manual("Ideal\nTargeted\nIntervention", values = c("red", "blue"), labels = c("No", "Yes"))
grid.arrange(netplot, sprayplot, idealplot, ncol = 1)

@

<<checkLinearityAssumption_sens, echo = FALSE, results = 'hide', eval = FALSE>>= 
# lowsite$hspray <- ifelse(lowsite$hspray == "No", 0, 1)
# lowsite$net <- ifelse(lowsite$net == "No", 0, 1)
# highsite$hspray <- ifelse(highsite$hspray == "No", 0, 1)
# highsite$net <- ifelse(highsite$net == "No", 0, 1)

rcspline.plot(lowsite$comrsks, lowsite$net, model = "logistic", xlab = "Combined Risk", ylab = "Log Odds Net Use")#evidence of non-linearity (u-shape)
rcspline.plot(highsite$comrsks, highsite$net, model = "logistic", xlab = "Combined Risk")
rcspline.plot(lowsite$comrsks, lowsite$hspray, model = "logistic")
rcspline.plot(highsite$comrsks, highsite$hspray, model = "logistic")

rcspline.plot(lowsite$arisk, lowsite$net, model = "logistic")
rcspline.plot(highsite$arisk, highsite$net, model = "logistic")
rcspline.plot(lowsite$arisk, lowsite$hspray, model = "logistic")
rcspline.plot(highsite$arisk, highsite$hspray, model = "logistic")

rcspline.plot(lowsite$mrisks, lowsite$net, model = "logistic")
rcspline.plot(highsite$mrisks, highsite$net, model = "logistic", xlab = "Mosquito Risk")
rcspline.plot(lowsite$mrisks, lowsite$hspray, model = "logistic")
rcspline.plot(highsite$mrisks, highsite$hspray, model = "logistic", xlab = "Mosquito Risk")#evidence of non-linearity (increasing then leveling off)
@

<<GlobalInteractionModel, echo = FALSE>>= 
intsm <- glm(hspray~comrsks*site, data = both, family = "binomial")
intnm <- glm(net~comrsks*site, data = both, family = "binomial")
@

<<model1_sens, echo = FALSE>>= 
m1ls <- glm(hspray~comrsks, data = lowsite, family = "binomial")
m1ls.est <- c(exp(summary(m1ls)$coef[2, 1]), exp(summary(m1ls)$coef[2, 1]-1.96*summary(m1ls)$coef[2, 2]), exp(summary(m1ls)$coef[2, 1]+1.96*summary(m1ls)$coef[2, 2]))
m1ln <- glm(net~comrsks, data = lowsite, family = "binomial")
m1ln.est <- c(exp(summary(m1ln)$coef[2, 1]), exp(summary(m1ln)$coef[2, 1]-1.96*summary(m1ln)$coef[2, 2]), exp(summary(m1ln)$coef[2, 1]+1.96*summary(m1ln)$coef[2, 2]))

m1hs <- glm(hspray~comrsks, data = highsite, family = "binomial")
m1hs.est <- c(exp(summary(m1hs)$coef[2, 1]), exp(summary(m1hs)$coef[2, 1]-1.96*summary(m1hs)$coef[2, 2]), exp(summary(m1hs)$coef[2, 1]+1.96*summary(m1hs)$coef[2, 2]))
m1hn <- glm(net~comrsks, data = highsite, family = "binomial")
m1hn.est <- c(exp(summary(m1hn)$coef[2, 1]), exp(summary(m1hn)$coef[2, 1]-1.96*summary(m1hn)$coef[2, 2]), exp(summary(m1hn)$coef[2, 1]+1.96*summary(m1hn)$coef[2, 2]))

Treatment <- rep(c("Net", "Spray"), 2)
Site <- c("High", "", "Low", "")
outmats <- round(matrix(c(m1hn.est, m1hs.est, m1ln.est, m1ls.est), 4, 3, byrow = T), 2)
colnames(outmats) <- c("OR", "Lower 95% CI", "Upper 95% CI")
obj1outs <- cbind(Site, Treatment, outmat, outmats)
@

\subsection{Restricted TWI}

The use of the restricted TWI algorithm identified fewer regions as high risk than the general TWI at both sites and was less likely to assign exposure risk to areas near a channel (Fig. \ref{twis}).  The use of the restricted TWI based risk surface in the combined risk score increased the odds of a high-risk labelled household to have received a treatment for both the high and low sites,  although the increase in OR for the low site remained non-significant (Table \ref{Sens}).

  
<<Obj1Table_sens, echo = FALSE, results = 'asis', eval = FALSE>>= 
print(xtable(obj1outs, caption = "Comparison of restricted TWI results with general TWI results.", label = "Sens"), include.rownames = FALSE)
@

\begin{table}[ht]
\centering
\begin{tabular}{llllllll}
  \hline
 &  & \multicolumn{3}{l}{General TWI} & \multicolumn{3}{l}{Restricted TWI}\\
Site & Treatment & OR & Lower 95\% CI & Upper 95\% CI & OR & Lower 95\% CI & Upper 95\% CI \\ 
  \hline
High & Net & 1.35 & 1.26 & 1.44 & 1.45 & 1.33 & 1.59 \\ 
   & Spray & 1.13 & 1.00 & 1.26 & 1.22 & 1.05 & 1.42 \\ 
  Low & Net & 1.09 & 0.86 & 1.39 & 1.33 & 0.93 & 1.90 \\ 
   & Spray & 0.90 & 0.61 & 1.34 & 1.10 & 0.59 & 2.03 \\ 
   \hline
\end{tabular}
\caption{Comparison of results when constructing combined risk from the restricted TWI or general TWI.} 
\label{Sens}
\end{table}

\begin{figure}
\centering
\includegraphics[scale=.5]{./figure/CompareTWI.png}
\caption{Comparison of the general TWI (left) and the restricted TWI (right) showing the lower extent of channels identified as moderate to high risk by the restricted TWI.  The restricted TWI also identified several areas missed by the general TWI. }
\label{twis}
\end{figure}

<<SepModels_sens, echo = FALSE>>= 
#Separate model for each risk type
m2als <- glm(hspray~arisk, data = lowsite, family = "binomial")
m2als.est <- c(exp(summary(m2als)$coef[2, 1]), exp(summary(m2als)$coef[2, 1]-1.96*summary(m2als)$coef[2, 2]), exp(summary(m2als)$coef[2, 1]+1.96*summary(m2als)$coef[2, 2]))
m2aln <- glm(net~arisk, data = lowsite, family = "binomial")
m2aln.est <- c(exp(summary(m2aln)$coef[2, 1]), exp(summary(m2aln)$coef[2, 1]-1.96*summary(m2aln)$coef[2, 2]), exp(summary(m2aln)$coef[2, 1]+1.96*summary(m2aln)$coef[2, 2]))
m2mls <- glm(hspray~arisks, data = lowsite, family = "binomial")
m2mls.est <- c(exp(summary(m2mls)$coef[2, 1]), exp(summary(m2mls)$coef[2, 1]-1.96*summary(m2mls)$coef[2, 2]), exp(summary(m2mls)$coef[2, 1]+1.96*summary(m2mls)$coef[2, 2]))
m2mln <- glm(net~arisks, data = lowsite, family = "binomial")
m2mln.est <- c(exp(summary(m2mln)$coef[2, 1]), exp(summary(m2mln)$coef[2, 1]-1.96*summary(m2mln)$coef[2, 2]), exp(summary(m2mln)$coef[2, 1]+1.96*summary(m2mln)$coef[2, 2]))

m2ahs <- glm(hspray~arisk, data = highsite, family = "binomial")
m2ahs.est <- c(exp(summary(m2ahs)$coef[2, 1]), exp(summary(m2ahs)$coef[2, 1]-1.96*summary(m2ahs)$coef[2, 2]), exp(summary(m2ahs)$coef[2, 1]+1.96*summary(m2ahs)$coef[2, 2]))
m2ahn <- glm(net~arisk, data = highsite, family = "binomial")
m2ahn.est <- c(exp(summary(m2ahn)$coef[2, 1]), exp(summary(m2ahn)$coef[2, 1]-1.96*summary(m2ahn)$coef[2, 2]), exp(summary(m2ahn)$coef[2, 1]+1.96*summary(m2ahn)$coef[2, 2]))
m2mhs <- glm(hspray~arisks, data = highsite, family = "binomial")
m2mhs.est <- c(exp(summary(m2mhs)$coef[2, 1]), exp(summary(m2mhs)$coef[2, 1]-1.96*summary(m2mhs)$coef[2, 2]), exp(summary(m2mhs)$coef[2, 1]+1.96*summary(m2mhs)$coef[2, 2]))
m2mhn <- glm(net~arisks, data = highsite, family = "binomial")
m2mhn.est <- c(exp(summary(m2mhn)$coef[2, 1]), exp(summary(m2mhn)$coef[2, 1]-1.96*summary(m2mhn)$coef[2, 2]), exp(summary(m2mhn)$coef[2, 1]+1.96*summary(m2mhn)$coef[2, 2]))

sepmats <- round(matrix(c(m2ahn.est, m2mhn.est, m2ahs.est, m2mhs.est, m2aln.est, m2mln.est, m2als.est, m2mls.est), 4, 6, byrow = T), 2)
colnames(sepmats) <- c(rep("Age Risk (<5 or >65)", 3), rep("Age Risk (<5)", 3))
est <- c("", "", rep(c("OR", "Lower 95% CI", "Upper 95% CI"), 2))
sepouts <- cbind(Site, Treatment, sepmats)
sepouts <- rbind(est, sepouts)
rownames(sepouts) <- 1:nrow(sepouts)
@

%Table 4.  Comparison of the odds of receiving a treatment based on health risk due to age with and without the inclusion of elderly household members. 
<<r objective2Table_sens, echo = FALSE, results = 'asis', eval = FALSE>>= 
xtable(sepouts)
@

\section{Discussion}
Our methodology is motivated by the need to improve the efficiency of intervention administration protocols and evaluate existing protocols.  Our example analysis evaluates existing protocols in which the administration of bed nets target pregnant women.  Therefore,  we would expect that households with young children would be more likely to have LLINs.  We found that health risk was associated with an increased probability of LLIN use at the high site but not the low site.  Similarly, under current protocols, indoor residual spraying is intended to target households at high risk for mosquito exposure  so we would expect that households with high exposure risk would be associated with indoor residual spraying.  Again,  this is the pattern we observed at the high site but not the low site where we found the opposite association.\\

Since we do not have mosquito incidence data we evaluate the efficacy of each TWI algorithm by how closely each algorithm matches our expectations based on the intervention administration protocol at each site.  The general TWI algorithm identified channels at both sites as moderate to high risk.  However, while these channels are likely to have higher wetness, the water may drain too quickly to provide quality breeding habitat for mosquitoes.  Use of the restricted TWI algorithm identified fewer channels as having moderate to high exposure risk while identifying some areas not identified by the general TWI algorithm (Fig. \ref{twis}).  Therefore, the restricted TWI algorithm may out-perform the general TWI in identifying mosquito breeding sites.  Our results comparing both TWI algorithms indicates a stronger association between the restricted TWI and intervention use indicating better alignment between the restricted TWI and mosquito risk assessments on the ground. This was particularly noticeable when evaluating the OR of a household receiving indoor residual spraying at the low site where the association was at least in the preferable direction, albeit not significantly.  We believe our method can be used to quickly evaluate the overall risk for a given household and improve the efficiency of distribution protocols.\\

Our method does not depend on accurately identifying the absolute risk of any given household, but rather the relative risk of every household on the landscape.  This is important when trying to determine which areas should be targeted when resources are limited, as is often the case in areas where mosquito-borne diseases are transmitted. We believe the restricted TWI described in appendix A provides a simple and easily implemented algorithm for identifying high risk areas which may perform better than more complicated TWI algorithms based on the calculation of up-slope areas.  However, the sensitivity of our results to choice of TWI algorithm suggests that the TWI should be validated with additional information such as infection data.  This has been done previously (\cite{Cohen2008, Cohen2010}),  but only with a single algorithm at a single site.  We recommend further evaluation of TWI algorithms with actual mosquito borne infection information at multiple sites, preferably with different topographies.\\


\printbibliography


\end{document}