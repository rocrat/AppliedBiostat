xtable(obj1out, caption = "Odds of receiving a treatment as a function of combined risk.", label = "ORcmb")
View(obj1out)
xtable(obj1out, caption = "Odds of receiving a treatment as a function of combined risk.", label = "ORcmb", row.names = FALSE)
?print.xtable
xtable(obj1out, caption = "Odds of receiving a treatment as a function of combined risk.", label = "ORcmb", include.rownames = FALSE)
print(xtable(obj1out, caption = "Odds of receiving a treatment as a function of combined risk.", label = "ORcmb"), include.rownames = FALSE)
xtable(sepout, caption = "Odds of treatment from risk of either mosquito exposure or malaria risk.", label = "ORtrt")
#Separate model for each risk type
m2als <- glm(hspray~arisk, data = lowsite, family = "binomial")
m2als.est <- c(exp(summary(m2als)$coef[2, 1]), exp(summary(m2als)$coef[2, 1]-1.96*summary(m2als)$coef[2, 2]), exp(summary(m2als)$coef[2, 1]+1.96*summary(m2als)$coef[2, 2]))
m2aln <- glm(net~arisk, data = lowsite, family = "binomial")
m2aln.est <- c(exp(summary(m2aln)$coef[2, 1]), exp(summary(m2aln)$coef[2, 1]-1.96*summary(m2aln)$coef[2, 2]), exp(summary(m2aln)$coef[2, 1]+1.96*summary(m2aln)$coef[2, 2]))
m2mls <- glm(hspray~mrisk, data = lowsite, family = "binomial")
m2mls.est <- c(exp(summary(m2mls)$coef[2, 1]), exp(summary(m2mls)$coef[2, 1]-1.96*summary(m2mls)$coef[2, 2]), exp(summary(m2mls)$coef[2, 1]+1.96*summary(m2mls)$coef[2, 2]))
m2mln <- glm(net~mrisk, data = lowsite, family = "binomial")
m2mln.est <- c(exp(summary(m2mln)$coef[2, 1]), exp(summary(m2mln)$coef[2, 1]-1.96*summary(m2mln)$coef[2, 2]), exp(summary(m2mln)$coef[2, 1]+1.96*summary(m2mln)$coef[2, 2]))
m2ahs <- glm(hspray~arisk, data = highsite, family = "binomial")
m2ahs.est <- c(exp(summary(m2ahs)$coef[2, 1]), exp(summary(m2ahs)$coef[2, 1]-1.96*summary(m2ahs)$coef[2, 2]), exp(summary(m2ahs)$coef[2, 1]+1.96*summary(m2ahs)$coef[2, 2]))
m2ahn <- glm(net~arisk, data = highsite, family = "binomial")
m2ahn.est <- c(exp(summary(m2ahn)$coef[2, 1]), exp(summary(m2ahn)$coef[2, 1]-1.96*summary(m2ahn)$coef[2, 2]), exp(summary(m2ahn)$coef[2, 1]+1.96*summary(m2ahn)$coef[2, 2]))
m2mhs <- glm(hspray~mrisk, data = highsite, family = "binomial")
m2mhs.est <- c(exp(summary(m2mhs)$coef[2, 1]), exp(summary(m2mhs)$coef[2, 1]-1.96*summary(m2mhs)$coef[2, 2]), exp(summary(m2mhs)$coef[2, 1]+1.96*summary(m2mhs)$coef[2, 2]))
m2mhn <- glm(net~mrisk, data = highsite, family = "binomial")
m2mhn.est <- c(exp(summary(m2mhn)$coef[2, 1]), exp(summary(m2mhn)$coef[2, 1]-1.96*summary(m2mhn)$coef[2, 2]), exp(summary(m2mhn)$coef[2, 1]+1.96*summary(m2mhn)$coef[2, 2]))
sepmat <- round(matrix(c(m2ahn.est, m2mhn.est, m2ahs.est, m2mhs.est, m2aln.est, m2mln.est, m2als.est, m2mls.est), 4, 6, byrow = T), 2)
colnames(sepmat) <- c(rep("Age Risk", 3), rep("Mosq. Risk", 3))
est <- c("", "", rep(c("OR", "Lower 95% CI", "Upper 95% CI"), 2))
sepout <- cbind(Site, Treatment, sepmat)
sepout <- rbind(est, sepout)
rownames(sepout) <- 1:nrow(sepout)
xtable(sepout, caption = "Odds of treatment from risk of either mosquito exposure or malaria risk.", label = "ORtrt")
print(xtable(sepout, caption = "Odds of treatment from risk of either mosquito exposure or malaria risk.", label = "ORtrt"), include.rownames = FALSE)
#use focal to create moving window with gaussian weights for assiging household risk
# create filter for focal window
r <- raster(ncols = 36, nrows = 36, xmn = 0)
#convert TWI to raster
lowtr_s <- lowtwi
hightr_s <- hightwi
fmat <- focalWeight(r, d = 10, type = 'Gauss')
mriskLows <- focal(lowtr_s, fmat, filename = 'smoothLowTWI_sens', pad = T, padValue = median(lowt$band1), overwrite = T)
mriskHighs <- focal(hightr_s, fmat, filename = 'smoothHighTWI_sens', pad = T, padValue = median(hight$band1), overwrite = T)
lowsite$mrisks <- extract(mriskLows, y = cbind(lowsite$lon, lowsite$lat))
highsite$mrisks <- extract(mriskHighs, y = cbind(highsite$lon, highsite$lat))
#Standardize the risk scores
lowsite$mriskstds <- scale(log(lowsite$mrisks+1), center = F)
highsite$mriskstds <- scale(log(highsite$mrisks+1), center = F)
lowInfect <- ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = mrisks), data = lowsite, alpha = 0.9)+scale_colour_gradient("Infection Risk", low = "blue", high = "red")
highInfect <- ggplot(data = highp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1714,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = mrisks), data = highsite, alpha = 0.8)+scale_colour_gradient("Infection Risk", low = "blue", high = "red")
lowsite$comrsks <- scale(log(lowsite$mrisks+1), center = F)+scale(log(lowsite$arisk+1), center = F)
highsite$comrsks <- scale(log(highsite$mrisks+1), center = F)+scale(log(highsite$arisk+1), center = F)
both <- rbind(lowsite[, -34], highsite)
intsm <- glm(hspray~comrsks*site, data = both, family = "binomial")
intnm <- glm(net~comrsks*site, data = both, family = "binomial")
m1ls <- glm(hspray~comrsks, data = lowsite, family = "binomial")
m1ls.est <- c(exp(summary(m1ls)$coef[2, 1]), exp(summary(m1ls)$coef[2, 1]-1.96*summary(m1ls)$coef[2, 2]), exp(summary(m1ls)$coef[2, 1]+1.96*summary(m1ls)$coef[2, 2]))
m1ln <- glm(net~comrsks, data = lowsite, family = "binomial")
m1ln.est <- c(exp(summary(m1ln)$coef[2, 1]), exp(summary(m1ln)$coef[2, 1]-1.96*summary(m1ln)$coef[2, 2]), exp(summary(m1ln)$coef[2, 1]+1.96*summary(m1ln)$coef[2, 2]))
m1hs <- glm(hspray~comrsks, data = highsite, family = "binomial")
m1hs.est <- c(exp(summary(m1hs)$coef[2, 1]), exp(summary(m1hs)$coef[2, 1]-1.96*summary(m1hs)$coef[2, 2]), exp(summary(m1hs)$coef[2, 1]+1.96*summary(m1hs)$coef[2, 2]))
m1hn <- glm(net~comrsks, data = highsite, family = "binomial")
m1hn.est <- c(exp(summary(m1hn)$coef[2, 1]), exp(summary(m1hn)$coef[2, 1]-1.96*summary(m1hn)$coef[2, 2]), exp(summary(m1hn)$coef[2, 1]+1.96*summary(m1hn)$coef[2, 2]))
Treatment <- rep(c("Net", "Spray"), 2)
Site <- c("High", "", "Low", "")
outmats <- round(matrix(c(m1hn.est, m1hs.est, m1ln.est, m1ls.est), 4, 3, byrow = T), 2)
colnames(outmats) <- c("OR", "Lower 95% CI", "Upper 95% CI")
obj1outs <- cbind(Site, Treatment, outmat, outmats)
print(xtable(obj1outs, caption = "Comparison of restricted TWI results with general TWI results.", label = "Sens"), include.rownames = FALSE)
rm(list = ls())
library(car)
library(ggplot2)
library(ggmap)
library(MASS)
library(plyr)
library(dplyr)
library(xtable)
hdat <- read.csv("C:/Classes/AppliedBiostat/Project/housedata.csv")
sumdat <- hdat
sumdat$net <- factor(ifelse(is.na(sumdat$net), NA, ifelse(sumdat$net == 0, "No", "Yes")))
sumdat$under5f <- factor(ifelse(is.na(sumdat$under5), NA, ifelse(sumdat$under5 >= 1, "Yes", "No")))
sumdat$under1f <- factor(ifelse(is.na(sumdat$under1), NA, ifelse(sumdat$under1 >= 1, "Yes", "No")))
sumdat$under18f <- factor(ifelse(is.na(sumdat$under18), NA, ifelse(sumdat$under18 >= 1, "Yes", "No")))
sumdat$over65f <- factor(ifelse(is.na(sumdat$under18), NA, ifelse(sumdat$over65 >= 1, "Yes", "No")))
sumdat$periph <- factor(ifelse(is.na(sumdat$periph), NA, ifelse(sumdat$periph == 1, "Yes", "No")))
sumdat$hspray <- factor(ifelse(is.na(sumdat$hspray), NA, ifelse(sumdat$hspray == 0, "No", "Yes")))
sumdat$site <- factor(ifelse(is.na(sumdat$site), NA, ifelse(sumdat$site == 1, "High", "Low")))
sumdat[which(sumdat$site == "Low" & sumdat$lat>0), ]$site <- "High"#correct mis-labelled site
sumdat$arisk <- with(sumdat, (2*under1)+under5)#+over65
sumdat$ariskstd <- scale(log(sumdat$arisk+1), center = F)
#for sensitivity analysis exclude elderly group
sumdat$arisks <- with(sumdat, (2*under1)+under5)
sumdat$ariskstds <- scale(log(sumdat$arisks+1), center = F)
#read in the digital elevation data
library(raster, quietly = TRUE, warn.conflicts = FALSE)
library(rgdal)
demlow <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 34.98, lat = -.08)
demlow2 <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 35.98, lat = -.08)
demhigh <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 34.965, lat = .2)
lowel <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_43_13.tif")
lowel2 <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_44_13.tif")
highel <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_43_12.tif")
#shrink area
lowext <- extent(34.950000, 35.00042, -0.110000, -0.050000)
lowel <- crop(demlow, lowext, "C:/Classes/AppliedBiostat/Project/LowSiteData", overwrite = TRUE)
lowext2 <- extent(35.000000, 35.020000, -0.110000, -0.050000)
lowel2 <- crop(demlow2, lowext2, "C:/Classes/AppliedBiostat/Project/LowSiteData2", overwrite = TRUE)
highext <- extent(34.900000, 35.000417, 0.150000, 0.250000)
highel <- crop(demhigh, highext, "C:/Classes/AppliedBiostat/Project/HighSiteData", overwrite = TRUE)
lowelcomp <- merge(lowel, lowel2)
writeGDAL(as(lowelcomp, "SpatialPixelsDataFrame"), fname = "LowDEM.tif")
writeGDAL(as(highel, "SpatialPixelsDataFrame"), fname = "HighDEM.tif")
lowsite <- sumdat[sumdat$site == "Low", ]
lowp <- data.frame(rasterToPoints(lowelcomp))
highsite <- sumdat[sumdat$site == "High", ]
highp <- data.frame(rasterToPoints(highel))
names(highp)[3]  <-  "layer"
rm(lowel2, lowel)
# library(RSAGA)
# rsgenv <- rsaga.env(path = "C:\\Classes\\AppliedBiostat\\Project\\saga_2.1.4_Win32", check.libpath = FALSE, check.SAGA = FALSE, check.os.default = FALSE, modules = "C:\\Classes\\AppliedBiostat\\Project\\saga_2.1.4_Win32\\modules")
# rsaga.import.gdal("LowSiteData.grd", env = rsgenv)
lowTWI <- readGDAL("C:/Classes/AppliedBiostat/Project/LowTWI.tif")#TWI calculated by SAGA
highTWI <- readGDAL("C:/Classes/AppliedBiostat/Project/HighTWI.tif")
lowt <- data.frame(lowTWI)
# ggplot(data = lowt, aes(x = x, y = y))+geom_raster(aes(fill = band1))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = -8,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")#+ geom_point(aes(x = lon,  y = lat, color = hspray), data = lowsite[-565, ])+scale_colour_manual("Spray", values = c("green", "blue"))
#
hight <- data.frame(highTWI)
# ggplot(data = hight, aes(x = x, y = y))+geom_raster(aes(fill = band1))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = -5,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")#+ geom_point(aes(x = lon,  y = lat, color = hspray), data = highsite)+scale_colour_manual("Spray", values = c("red", "blue"))
library(SDMTools)
#calculate elevation variance
#first get diff from mean to deterime if it is a dip or a peak
#create 3 different windows for calculating dips,  this will account for drainage area to some extent
meanmat3 <- matrix(1/9, 3, 3)
meanmat7 <- matrix(1/49, 7, 7)
meanmat11 <- matrix(1/121, 11, 11)
#find dips at these three different windows, default function for focal is sum()
meanel3 <- focal(lowelcomp, w = meanmat3)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff3 <- lowelcomp-meanel3
values(meandiff3) <- ifelse(values(meandiff3)<0, values(meandiff3), 0)
meanel7 <- focal(lowelcomp, w = meanmat7)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff7 <- lowelcomp-meanel7
values(meandiff7) <- ifelse(values(meandiff7)<0, values(meandiff7), 0)
meanel11 <- focal(lowelcomp, w = meanmat11)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff11 <- lowelcomp-meanel11
values(meandiff11) <- ifelse(values(meandiff11)<0, values(meandiff11), 0)
lowdips <- meandiff3+meandiff7+meandiff11
#calculate aspect of each cell
lowasp <- aspect(lowelcomp, latlon = TRUE)
lowaspc <- lowasp
#categorize into quadrants
values(lowaspc) <- ifelse(values(lowasp)>45 & values(lowasp)  <=  135, 1,
ifelse(values(lowasp)>135 & values(lowasp)  <=  225, 2,
ifelse(values(lowasp)>225 & values(lowasp)  <=  315, 3,
ifelse(values(lowasp)>315 & values(lowasp)  <= 360, 4,
ifelse(values(lowasp)>0 & values(lowasp)  <=  45, 4, NA)))))
#Calculate aspect variance
aspmat3 <- matrix(1, 3, 3)
aspmat7 <- matrix(1, 7, 7)
aspmat11 <- matrix(1, 11, 11)
aspvar3 <- focal(lowaspc, aspmat3, fun = var, na.rm = T)
aspvar7 <- focal(lowaspc, aspmat7, fun = var, na.rm = T)
aspvar11 <- focal(lowaspc, aspmat11, fun = var, na.rm = T)
lowaspvar <- aspvar3+aspvar7+aspvar11
lowtwi <- lowaspvar*lowdips*-1
#repeat for High site
meanel3 <- focal(highel, w = meanmat3)#, pad = T, pad.value = mean(values(highel)))
meandiff3 <- highel-meanel3
values(meandiff3) <- ifelse(values(meandiff3)<0, values(meandiff3), 0)
meanel7 <- focal(highel, w = meanmat7)#, pad = T, pad.value = mean(values(highel)))
meandiff7 <- highel-meanel7
values(meandiff7) <- ifelse(values(meandiff7)<0, values(meandiff7), 0)
meanel11 <- focal(highel, w = meanmat11)#, pad = T, pad.value = mean(values(highel)))
meandiff11 <- highel-meanel11
values(meandiff11) <- ifelse(values(meandiff11)<0, values(meandiff11), 0)
highdips <- meandiff3+meandiff7+meandiff11
#Repeat for High site
highasp <- aspect(highel, latlon = TRUE)
highaspc <- highasp
#categorize into quadrants to generall classify the way the slope is facing
values(highaspc) <- ifelse(values(highasp)>45 & values(highasp)  <=  135, 1,
ifelse(values(highasp)>135 & values(highasp)  <=  225, 2,
ifelse(values(highasp)>225 & values(highasp)  <=  315, 3,
ifelse(values(highasp)>315 & values(highasp)  <= 360, 4,
ifelse(values(highasp)>0 & values(highasp)  <=  45, 4, NA)))))
#Calculate aspect variance
aspmat3 <- matrix(1, 3, 3)
aspmat7 <- matrix(1, 7, 7)
aspmat11 <- matrix(1, 11, 11)
aspvar3 <- focal(highaspc, aspmat3, fun = var, na.rm = T)
aspvar7 <- focal(highaspc, aspmat7, fun = var, na.rm = T)
aspvar11 <- focal(highaspc, aspmat11, fun = var, na.rm = T)
highaspvar <- aspvar3+aspvar7+aspvar11
hightwi <- highaspvar*highdips*-1
#plot restricted TWI
htwi <- as.data.frame(hightwi, xy = TRUE)
ltwi <- as.data.frame(lowtwi, xy = TRUE)
# ggplot(data = ltwi[complete.cases(ltwi), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = 15,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")
# #
# ggplot(data = htwi[complete.cases(htwi), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = max(htwi$layer, na.rm = TRUE)/2,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")
rm(aspvar3, aspvar7, aspvar11, highaspvar, lowaspvar, highdips, lowdips, highaspc, lowaspc, meandiff3, meandiff7, meandiff11, meanel3, meanel7, meanel11)
?writeRaster
writeRaster(hightwi, "HighSiteTWI.geotiff")
getwd()
writeRaster(hightwi, "HighSiteTWI.tiff")
writeRaster(lowtwi, "LowSiteTWI.tiff")
r <- raster(ncols = 36, nrows = 36, xmn = 0)
#convert TWI to raster
lowtr <- raster(lowTWI, layer = "band1")
hightr <- raster(highTWI, layer = "band1")
fmat <- focalWeight(r, d = 10, type = 'Gauss')
mriskLow <- focal(lowtr, fmat, filename = 'C:/Classes/AppliedBiostat/Project/smoothLowTWI', pad = T, padValue = median(lowt$band1), overwrite = T)
mriskHigh <- focal(hightr, fmat, filename = 'C:/Classes/AppliedBiostat/Project/smoothHighTWI', pad = T, padValue = median(hight$band1), overwrite = T)
writeRaster(mriskLow, "LowSite_MosquitoRisk.tiff")
writeRaster(mriskHigh, "HighSite_MosquitoRisk.tiff")
install.packages("ggmap")
library(MASS)
library(xtable)
install.packages(c("raster", "rgdal"))
install.packages("SDMTools")
library(gridExtra)
rm(list = ls())
library(car)
library(ggplot2)
library(ggmap)
library(MASS)
library(plyr)
library(dplyr)
library(xtable)
hdat <- read.csv("C:/Classes/AppliedBiostat/Project/housedata.csv")
sumdat <- hdat
sumdat$net <- factor(ifelse(is.na(sumdat$net), NA, ifelse(sumdat$net == 0, "No", "Yes")))
sumdat$under5f <- factor(ifelse(is.na(sumdat$under5), NA, ifelse(sumdat$under5 >= 1, "Yes", "No")))
sumdat$under1f <- factor(ifelse(is.na(sumdat$under1), NA, ifelse(sumdat$under1 >= 1, "Yes", "No")))
sumdat$under18f <- factor(ifelse(is.na(sumdat$under18), NA, ifelse(sumdat$under18 >= 1, "Yes", "No")))
sumdat$over65f <- factor(ifelse(is.na(sumdat$under18), NA, ifelse(sumdat$over65 >= 1, "Yes", "No")))
sumdat$periph <- factor(ifelse(is.na(sumdat$periph), NA, ifelse(sumdat$periph == 1, "Yes", "No")))
sumdat$hspray <- factor(ifelse(is.na(sumdat$hspray), NA, ifelse(sumdat$hspray == 0, "No", "Yes")))
sumdat$site <- factor(ifelse(is.na(sumdat$site), NA, ifelse(sumdat$site == 1, "High", "Low")))
sumdat[which(sumdat$site == "Low" & sumdat$lat>0), ]$site <- "High"#correct mis-labelled site
sumdat$arisk <- with(sumdat, (2*under1)+under5)#+over65
sumdat$ariskstd <- scale(log(sumdat$arisk+1), center = F)
#for sensitivity analysis exclude elderly group
sumdat$arisks <- with(sumdat, (2*under1)+under5)
sumdat$ariskstds <- scale(log(sumdat$arisks+1), center = F)
#read in the digital elevation data
library(raster, quietly = TRUE, warn.conflicts = FALSE)
library(rgdal)
demlow <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 34.98, lat = -.08)
demlow2 <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 35.98, lat = -.08)
demhigh <- getData(name = 'SRTM', download = FALSE, path = "C:/Classes/AppliedBiostat/Project", lon = 34.965, lat = .2)
lowel <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_43_13.tif")
lowel2 <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_44_13.tif")
highel <- readGDAL("C:/Classes/AppliedBiostat/Project/srtm_43_12.tif")
#shrink area
lowext <- extent(34.950000, 35.00042, -0.110000, -0.050000)
lowel <- crop(demlow, lowext, "C:/Classes/AppliedBiostat/Project/LowSiteData", overwrite = TRUE)
lowext2 <- extent(35.000000, 35.020000, -0.110000, -0.050000)
lowel2 <- crop(demlow2, lowext2, "C:/Classes/AppliedBiostat/Project/LowSiteData2", overwrite = TRUE)
highext <- extent(34.900000, 35.000417, 0.150000, 0.250000)
highel <- crop(demhigh, highext, "C:/Classes/AppliedBiostat/Project/HighSiteData", overwrite = TRUE)
lowelcomp <- merge(lowel, lowel2)
writeGDAL(as(lowelcomp, "SpatialPixelsDataFrame"), fname = "LowDEM.tif")
writeGDAL(as(highel, "SpatialPixelsDataFrame"), fname = "HighDEM.tif")
lowsite <- sumdat[sumdat$site == "Low", ]
lowp <- data.frame(rasterToPoints(lowelcomp))
highsite <- sumdat[sumdat$site == "High", ]
highp <- data.frame(rasterToPoints(highel))
names(highp)[3]  <-  "layer"
rm(lowel2, lowel)
# library(RSAGA)
# rsgenv <- rsaga.env(path = "C:\\Classes\\AppliedBiostat\\Project\\saga_2.1.4_Win32", check.libpath = FALSE, check.SAGA = FALSE, check.os.default = FALSE, modules = "C:\\Classes\\AppliedBiostat\\Project\\saga_2.1.4_Win32\\modules")
# rsaga.import.gdal("LowSiteData.grd", env = rsgenv)
lowTWI <- readGDAL("C:/Classes/AppliedBiostat/Project/LowTWI.tif")#TWI calculated by SAGA
highTWI <- readGDAL("C:/Classes/AppliedBiostat/Project/HighTWI.tif")
lowt <- data.frame(lowTWI)
# ggplot(data = lowt, aes(x = x, y = y))+geom_raster(aes(fill = band1))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = -8,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")#+ geom_point(aes(x = lon,  y = lat, color = hspray), data = lowsite[-565, ])+scale_colour_manual("Spray", values = c("green", "blue"))
#
hight <- data.frame(highTWI)
# ggplot(data = hight, aes(x = x, y = y))+geom_raster(aes(fill = band1))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = -5,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")#+ geom_point(aes(x = lon,  y = lat, color = hspray), data = highsite)+scale_colour_manual("Spray", values = c("red", "blue"))
library(SDMTools)
#calculate elevation variance
#first get diff from mean to deterime if it is a dip or a peak
#create 3 different windows for calculating dips,  this will account for drainage area to some extent
meanmat3 <- matrix(1/9, 3, 3)
meanmat7 <- matrix(1/49, 7, 7)
meanmat11 <- matrix(1/121, 11, 11)
#find dips at these three different windows, default function for focal is sum()
meanel3 <- focal(lowelcomp, w = meanmat3)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff3 <- lowelcomp-meanel3
values(meandiff3) <- ifelse(values(meandiff3)<0, values(meandiff3), 0)
meanel7 <- focal(lowelcomp, w = meanmat7)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff7 <- lowelcomp-meanel7
values(meandiff7) <- ifelse(values(meandiff7)<0, values(meandiff7), 0)
meanel11 <- focal(lowelcomp, w = meanmat11)#, pad = T, pad.value = mean(values(lowelcomp)))
meandiff11 <- lowelcomp-meanel11
values(meandiff11) <- ifelse(values(meandiff11)<0, values(meandiff11), 0)
lowdips <- meandiff3+meandiff7+meandiff11
#calculate aspect of each cell
lowasp <- aspect(lowelcomp, latlon = TRUE)
lowaspc <- lowasp
#categorize into quadrants
values(lowaspc) <- ifelse(values(lowasp)>45 & values(lowasp)  <=  135, 1,
ifelse(values(lowasp)>135 & values(lowasp)  <=  225, 2,
ifelse(values(lowasp)>225 & values(lowasp)  <=  315, 3,
ifelse(values(lowasp)>315 & values(lowasp)  <= 360, 4,
ifelse(values(lowasp)>0 & values(lowasp)  <=  45, 4, NA)))))
#Calculate aspect variance
aspmat3 <- matrix(1, 3, 3)
aspmat7 <- matrix(1, 7, 7)
aspmat11 <- matrix(1, 11, 11)
aspvar3 <- focal(lowaspc, aspmat3, fun = var, na.rm = T)
aspvar7 <- focal(lowaspc, aspmat7, fun = var, na.rm = T)
aspvar11 <- focal(lowaspc, aspmat11, fun = var, na.rm = T)
lowaspvar <- aspvar3+aspvar7+aspvar11
lowtwi <- lowaspvar*lowdips*-1
#repeat for High site
meanel3 <- focal(highel, w = meanmat3)#, pad = T, pad.value = mean(values(highel)))
meandiff3 <- highel-meanel3
values(meandiff3) <- ifelse(values(meandiff3)<0, values(meandiff3), 0)
meanel7 <- focal(highel, w = meanmat7)#, pad = T, pad.value = mean(values(highel)))
meandiff7 <- highel-meanel7
values(meandiff7) <- ifelse(values(meandiff7)<0, values(meandiff7), 0)
meanel11 <- focal(highel, w = meanmat11)#, pad = T, pad.value = mean(values(highel)))
meandiff11 <- highel-meanel11
values(meandiff11) <- ifelse(values(meandiff11)<0, values(meandiff11), 0)
highdips <- meandiff3+meandiff7+meandiff11
#Repeat for High site
highasp <- aspect(highel, latlon = TRUE)
highaspc <- highasp
#categorize into quadrants to generall classify the way the slope is facing
values(highaspc) <- ifelse(values(highasp)>45 & values(highasp)  <=  135, 1,
ifelse(values(highasp)>135 & values(highasp)  <=  225, 2,
ifelse(values(highasp)>225 & values(highasp)  <=  315, 3,
ifelse(values(highasp)>315 & values(highasp)  <= 360, 4,
ifelse(values(highasp)>0 & values(highasp)  <=  45, 4, NA)))))
#Calculate aspect variance
aspmat3 <- matrix(1, 3, 3)
aspmat7 <- matrix(1, 7, 7)
aspmat11 <- matrix(1, 11, 11)
aspvar3 <- focal(highaspc, aspmat3, fun = var, na.rm = T)
aspvar7 <- focal(highaspc, aspmat7, fun = var, na.rm = T)
aspvar11 <- focal(highaspc, aspmat11, fun = var, na.rm = T)
highaspvar <- aspvar3+aspvar7+aspvar11
hightwi <- highaspvar*highdips*-1
#write the rasters to file
# writeRaster(hightwi, "HighSiteTWI.tiff")
# writeRaster(lowtwi, "LowSiteTWI.tiff")
#plot restricted TWI
htwi <- as.data.frame(hightwi, xy = TRUE)
ltwi <- as.data.frame(lowtwi, xy = TRUE)
# ggplot(data = ltwi[complete.cases(ltwi), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = 15,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")
# #
# ggplot(data = htwi[complete.cases(htwi), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Wetness", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  = max(htwi$layer, na.rm = TRUE)/2,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")
rm(aspvar3, aspvar7, aspvar11, highaspvar, lowaspvar, highdips, lowdips, highaspc, lowaspc, meandiff3, meandiff7, meandiff11, meanel3, meanel7, meanel11)
#use focal to create moving window with gaussian weights for assiging household risk
#create filter for focal window
r <- raster(ncols = 36, nrows = 36, xmn = 0)
#convert TWI to raster
lowtr <- raster(lowTWI, layer = "band1")
hightr <- raster(highTWI, layer = "band1")
fmat <- focalWeight(r, d = 10, type = 'Gauss')
mriskLow <- focal(lowtr, fmat, filename = 'C:/Classes/AppliedBiostat/Project/smoothLowTWI', pad = T, padValue = median(lowt$band1), overwrite = T)
mriskHigh <- focal(hightr, fmat, filename = 'C:/Classes/AppliedBiostat/Project/smoothHighTWI', pad = T, padValue = median(hight$band1), overwrite = T)
#Write to file
# writeRaster(mriskHigh, "HighSite_MosquitoRisk.tiff")
# writeRaster(mriskLow, "LowSite_MosquitoRisk.tiff")
lowsite$mrisk <- extract(mriskLow, y = cbind(lowsite$lon, lowsite$lat))
highsite$mrisk <- extract(mriskHigh, y = cbind(highsite$lon, highsite$lat))
#Standardize the risk scores
lowsite$mriskpos <- lowsite$mrisk+abs(min(lowsite$mrisk, na.rm = T))
highsite$mriskpos <- highsite$mrisk+abs(min(highsite$mrisk, na.rm = T))
lowsite$mriskstd <- scale(log(lowsite$mriskpos+1), center = F)
highsite$mriskstd <- scale(log(highsite$mriskpos+1), center = F)
ggplot(data = lowp, aes(x = x, y = y)) +
geom_raster(aes(fill = layer)) +
scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
geom_point(aes(x = lon,  y = lat, color = mriskstd), data = lowsite[-565, ], alpha = 0.9) +
scale_colour_gradient("Mosquito Risk", low = "blue", high = "red")
lowsite$comrsk <- lowsite$mriskstd+lowsite$arisk
highsite$comrsk <- highsite$mriskstd+highsite$arisk
lowsite$site  <-  "Endemic"
highsite$site  <-  "Epidemic"
sitedat  <-  rbind(lowsite[-565, ],  highsite)
ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer)) +
scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
geom_point(aes(x = lon,  y = lat, color = comrsk), data = lowsite[-565, ], alpha = 0.9)+scale_colour_gradient("Combined Risk", low = "blue", high = "red") +
theme(legend.position = 'bottom', legend.box = 'horizontal')
m1ls <- glm(hspray~comrsk, data = lowsite, family = "binomial")
m1ls.est <- c(exp(summary(m1ls)$coef[2, 1]), exp(summary(m1ls)$coef[2, 1]-1.96*summary(m1ls)$coef[2, 2]), exp(summary(m1ls)$coef[2, 1]+1.96*summary(m1ls)$coef[2, 2]))
m1ln <- glm(net~comrsk, data = lowsite, family = "binomial")
m1ln.est <- c(exp(summary(m1ln)$coef[2, 1]), exp(summary(m1ln)$coef[2, 1]-1.96*summary(m1ln)$coef[2, 2]), exp(summary(m1ln)$coef[2, 1]+1.96*summary(m1ln)$coef[2, 2]))
#adjust for non-linearity
lq1 <- quantile(lowsite$comrsk, prob = .25)
lq2 <- quantile(lowsite$comrsk, prob = .5)
lq3 <- quantile(lowsite$comrsk, prob = .75)
lowsite$comrsk_q <- ifelse(lowsite$comrsk  <=  lq1, 1, ifelse(lowsite$comrsk>lq1 & lowsite$comrsk <= lq2, 2, ifelse(lowsite$comrsk>lq2 & lowsite$comrsk <= lq3, 3, 4)))
m1lnq <- glm(net~factor(comrsk_q), data = lowsite, family = "binomial")
# summary(m1lnq)
m1hs <- glm(hspray~comrsk, data = highsite, family = "binomial")
m1hs.est <- c(exp(summary(m1hs)$coef[2, 1]), exp(summary(m1hs)$coef[2, 1]-1.96*summary(m1hs)$coef[2, 2]), exp(summary(m1hs)$coef[2, 1]+1.96*summary(m1hs)$coef[2, 2]))
m1hn <- glm(net~comrsk, data = highsite, family = "binomial")
m1hn.est <- c(exp(summary(m1hn)$coef[2, 1]), exp(summary(m1hn)$coef[2, 1]-1.96*summary(m1hn)$coef[2, 2]), exp(summary(m1hn)$coef[2, 1]+1.96*summary(m1hn)$coef[2, 2]))
Treatment <- rep(c("Net", "Spray"), 2)
Site <- c("High", "", "Low", "")
outmat <- round(matrix(c(m1hn.est, m1hs.est, m1ln.est, m1ls.est), 4, 3, byrow = T), 2)
colnames(outmat) <- c("OR", "Lower 95% CI", "Upper 95% CI")
obj1out <- cbind(Site, Treatment, outmat)
print(xtable(obj1out, caption = "Odds of receiving a treatment as a function of combined risk.", label = "ORcmb"), include.rownames = FALSE)
#Separate model for each risk type
m2als <- glm(hspray~arisk, data = lowsite, family = "binomial")
m2als.est <- c(exp(summary(m2als)$coef[2, 1]), exp(summary(m2als)$coef[2, 1]-1.96*summary(m2als)$coef[2, 2]), exp(summary(m2als)$coef[2, 1]+1.96*summary(m2als)$coef[2, 2]))
m2aln <- glm(net~arisk, data = lowsite, family = "binomial")
m2aln.est <- c(exp(summary(m2aln)$coef[2, 1]), exp(summary(m2aln)$coef[2, 1]-1.96*summary(m2aln)$coef[2, 2]), exp(summary(m2aln)$coef[2, 1]+1.96*summary(m2aln)$coef[2, 2]))
m2mls <- glm(hspray~mrisk, data = lowsite, family = "binomial")
m2mls.est <- c(exp(summary(m2mls)$coef[2, 1]), exp(summary(m2mls)$coef[2, 1]-1.96*summary(m2mls)$coef[2, 2]), exp(summary(m2mls)$coef[2, 1]+1.96*summary(m2mls)$coef[2, 2]))
m2mln <- glm(net~mrisk, data = lowsite, family = "binomial")
m2mln.est <- c(exp(summary(m2mln)$coef[2, 1]), exp(summary(m2mln)$coef[2, 1]-1.96*summary(m2mln)$coef[2, 2]), exp(summary(m2mln)$coef[2, 1]+1.96*summary(m2mln)$coef[2, 2]))
m2ahs <- glm(hspray~arisk, data = highsite, family = "binomial")
m2ahs.est <- c(exp(summary(m2ahs)$coef[2, 1]), exp(summary(m2ahs)$coef[2, 1]-1.96*summary(m2ahs)$coef[2, 2]), exp(summary(m2ahs)$coef[2, 1]+1.96*summary(m2ahs)$coef[2, 2]))
m2ahn <- glm(net~arisk, data = highsite, family = "binomial")
m2ahn.est <- c(exp(summary(m2ahn)$coef[2, 1]), exp(summary(m2ahn)$coef[2, 1]-1.96*summary(m2ahn)$coef[2, 2]), exp(summary(m2ahn)$coef[2, 1]+1.96*summary(m2ahn)$coef[2, 2]))
m2mhs <- glm(hspray~mrisk, data = highsite, family = "binomial")
m2mhs.est <- c(exp(summary(m2mhs)$coef[2, 1]), exp(summary(m2mhs)$coef[2, 1]-1.96*summary(m2mhs)$coef[2, 2]), exp(summary(m2mhs)$coef[2, 1]+1.96*summary(m2mhs)$coef[2, 2]))
m2mhn <- glm(net~mrisk, data = highsite, family = "binomial")
m2mhn.est <- c(exp(summary(m2mhn)$coef[2, 1]), exp(summary(m2mhn)$coef[2, 1]-1.96*summary(m2mhn)$coef[2, 2]), exp(summary(m2mhn)$coef[2, 1]+1.96*summary(m2mhn)$coef[2, 2]))
sepmat <- round(matrix(c(m2ahn.est, m2mhn.est, m2ahs.est, m2mhs.est, m2aln.est, m2mln.est, m2als.est, m2mls.est), 4, 6, byrow = T), 2)
colnames(sepmat) <- c(rep("Age Risk", 3), rep("Mosq. Risk", 3))
est <- c("", "", rep(c("OR", "Lower 95% CI", "Upper 95% CI"), 2))
sepout <- cbind(Site, Treatment, sepmat)
sepout <- rbind(est, sepout)
rownames(sepout) <- 1:nrow(sepout)
print(xtable(sepout, caption = "Odds of treatment from risk of either mosquito exposure or malaria risk.", label = "ORtrt"), include.rownames = FALSE)
#use focal to create moving window with gaussian weights for assiging household risk
# create filter for focal window
r <- raster(ncols = 36, nrows = 36, xmn = 0)
#convert TWI to raster
lowtr_s <- lowtwi
hightr_s <- hightwi
fmat <- focalWeight(r, d = 10, type = 'Gauss')
mriskLows <- focal(lowtr_s, fmat, filename = 'smoothLowTWI_sens', pad = T, padValue = median(lowt$band1), overwrite = T)
mriskHighs <- focal(hightr_s, fmat, filename = 'smoothHighTWI_sens', pad = T, padValue = median(hight$band1), overwrite = T)
lowtrps <- as.data.frame(mriskLows, xy = T)
hightrps <- as.data.frame(mriskHighs, xy = T)
lowtrps$stdrsk <- base::scale(lowtrps$layer)
hightrps$stdrsk <- base::scale(hightrps$layer)
ggplot(data = lowtrps[complete.cases(lowtrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Unscaled Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(lowtrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9, pch = 1)+ggtitle("Endemic Site")+xlab("Longitude")+ylab("Latitude")
ggplot(data = hightrps[complete.cases(hightrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(hightrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = highsite[-which(highsite$lon == max(highsite$lon)), ], alpha = 0.8, pch = 1)+ggtitle("Epidemic-prone Site")+xlab("Longitude")+ylab("Latitude")
lowsite$mrisks <- extract(mriskLows, y = cbind(lowsite$lon, lowsite$lat))
highsite$mrisks <- extract(mriskHighs, y = cbind(highsite$lon, highsite$lat))
#Standardize the risk scores
lowsite$mriskstds <- scale(log(lowsite$mrisks+1), center = F)
highsite$mriskstds <- scale(log(highsite$mrisks+1), center = F)
ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = mrisks), data = lowsite, alpha = 0.9)+scale_colour_gradient("Infection Risk", low = "blue", high = "red")
lowsite$comrsks <- scale(log(lowsite$mrisks+1), center = F)+scale(log(lowsite$arisk+1), center = F)
highsite$comrsks <- scale(log(highsite$mrisks+1), center = F)+scale(log(highsite$arisk+1), center = F)
both <- rbind(lowsite[, -34], highsite)
ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = comrsks), data = lowsite, alpha = 0.9)+scale_colour_gradient("Combined Risk", low = "blue", high = "red")+theme_bw()+theme(legend.position = 'bottom', legend.box = 'horizontal')+ylim(c(-.1, -.06))+xlim(c(34.96, 35.01))+ylab("Latitude")+xlab("Longitude")+ggtitle("Endemic Site")
intsm <- glm(hspray~comrsks*site, data = both, family = "binomial")
intnm <- glm(net~comrsks*site, data = both, family = "binomial")
m1ls <- glm(hspray~comrsks, data = lowsite, family = "binomial")
m1ls.est <- c(exp(summary(m1ls)$coef[2, 1]), exp(summary(m1ls)$coef[2, 1]-1.96*summary(m1ls)$coef[2, 2]), exp(summary(m1ls)$coef[2, 1]+1.96*summary(m1ls)$coef[2, 2]))
m1ln <- glm(net~comrsks, data = lowsite, family = "binomial")
m1ln.est <- c(exp(summary(m1ln)$coef[2, 1]), exp(summary(m1ln)$coef[2, 1]-1.96*summary(m1ln)$coef[2, 2]), exp(summary(m1ln)$coef[2, 1]+1.96*summary(m1ln)$coef[2, 2]))
m1hs <- glm(hspray~comrsks, data = highsite, family = "binomial")
m1hs.est <- c(exp(summary(m1hs)$coef[2, 1]), exp(summary(m1hs)$coef[2, 1]-1.96*summary(m1hs)$coef[2, 2]), exp(summary(m1hs)$coef[2, 1]+1.96*summary(m1hs)$coef[2, 2]))
m1hn <- glm(net~comrsks, data = highsite, family = "binomial")
m1hn.est <- c(exp(summary(m1hn)$coef[2, 1]), exp(summary(m1hn)$coef[2, 1]-1.96*summary(m1hn)$coef[2, 2]), exp(summary(m1hn)$coef[2, 1]+1.96*summary(m1hn)$coef[2, 2]))
Treatment <- rep(c("Net", "Spray"), 2)
Site <- c("High", "", "Low", "")
outmats <- round(matrix(c(m1hn.est, m1hs.est, m1ln.est, m1ls.est), 4, 3, byrow = T), 2)
colnames(outmats) <- c("OR", "Lower 95% CI", "Upper 95% CI")
obj1outs <- cbind(Site, Treatment, outmat, outmats)
print(xtable(obj1outs, caption = "Comparison of restricted TWI results with general TWI results.", label = "Sens"), include.rownames = FALSE)
#Separate model for each risk type
m2als <- glm(hspray~arisk, data = lowsite, family = "binomial")
m2als.est <- c(exp(summary(m2als)$coef[2, 1]), exp(summary(m2als)$coef[2, 1]-1.96*summary(m2als)$coef[2, 2]), exp(summary(m2als)$coef[2, 1]+1.96*summary(m2als)$coef[2, 2]))
m2aln <- glm(net~arisk, data = lowsite, family = "binomial")
m2aln.est <- c(exp(summary(m2aln)$coef[2, 1]), exp(summary(m2aln)$coef[2, 1]-1.96*summary(m2aln)$coef[2, 2]), exp(summary(m2aln)$coef[2, 1]+1.96*summary(m2aln)$coef[2, 2]))
m2mls <- glm(hspray~arisks, data = lowsite, family = "binomial")
m2mls.est <- c(exp(summary(m2mls)$coef[2, 1]), exp(summary(m2mls)$coef[2, 1]-1.96*summary(m2mls)$coef[2, 2]), exp(summary(m2mls)$coef[2, 1]+1.96*summary(m2mls)$coef[2, 2]))
m2mln <- glm(net~arisks, data = lowsite, family = "binomial")
m2mln.est <- c(exp(summary(m2mln)$coef[2, 1]), exp(summary(m2mln)$coef[2, 1]-1.96*summary(m2mln)$coef[2, 2]), exp(summary(m2mln)$coef[2, 1]+1.96*summary(m2mln)$coef[2, 2]))
m2ahs <- glm(hspray~arisk, data = highsite, family = "binomial")
m2ahs.est <- c(exp(summary(m2ahs)$coef[2, 1]), exp(summary(m2ahs)$coef[2, 1]-1.96*summary(m2ahs)$coef[2, 2]), exp(summary(m2ahs)$coef[2, 1]+1.96*summary(m2ahs)$coef[2, 2]))
m2ahn <- glm(net~arisk, data = highsite, family = "binomial")
m2ahn.est <- c(exp(summary(m2ahn)$coef[2, 1]), exp(summary(m2ahn)$coef[2, 1]-1.96*summary(m2ahn)$coef[2, 2]), exp(summary(m2ahn)$coef[2, 1]+1.96*summary(m2ahn)$coef[2, 2]))
m2mhs <- glm(hspray~arisks, data = highsite, family = "binomial")
m2mhs.est <- c(exp(summary(m2mhs)$coef[2, 1]), exp(summary(m2mhs)$coef[2, 1]-1.96*summary(m2mhs)$coef[2, 2]), exp(summary(m2mhs)$coef[2, 1]+1.96*summary(m2mhs)$coef[2, 2]))
m2mhn <- glm(net~arisks, data = highsite, family = "binomial")
m2mhn.est <- c(exp(summary(m2mhn)$coef[2, 1]), exp(summary(m2mhn)$coef[2, 1]-1.96*summary(m2mhn)$coef[2, 2]), exp(summary(m2mhn)$coef[2, 1]+1.96*summary(m2mhn)$coef[2, 2]))
sepmats <- round(matrix(c(m2ahn.est, m2mhn.est, m2ahs.est, m2mhs.est, m2aln.est, m2mln.est, m2als.est, m2mls.est), 4, 6, byrow = T), 2)
colnames(sepmats) <- c(rep("Age Risk (<5 or >65)", 3), rep("Age Risk (<5)", 3))
est <- c("", "", rep(c("OR", "Lower 95% CI", "Upper 95% CI"), 2))
sepouts <- cbind(Site, Treatment, sepmats)
sepouts <- rbind(est, sepouts)
rownames(sepouts) <- 1:nrow(sepouts)
ggplot(data = lowp, aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Elevation", low  =  "brown",  mid  =  "yellow",  high  =  "green",   midpoint  =  1200,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+ geom_point(aes(x = lon,  y = lat, color = mrisks), data = lowsite, alpha = 0.9)+scale_colour_gradient("Infection Risk", low = "blue", high = "red")
ggplot(data = lowtrps[complete.cases(lowtrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Unscaled Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(lowtrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9, pch = 1)+ggtitle("Endemic Site")+xlab("Longitude")+ylab("Latitude")
ggplot(data = hightrps[complete.cases(hightrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(hightrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = highsite[-which(highsite$lon == max(highsite$lon)), ], alpha = 0.8, pch = 1)+ggtitle("Epidemic-prone Site")+xlab("Longitude")+ylab("Latitude")
ggplot(data = lowtrp[complete.cases(lowtrp), ], aes(x = x, y = y)) +
geom_raster(aes(fill = layer)) +
scale_fill_gradient2("Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  -12,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
theme(legend.position = 'bottom') +
geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9) +
xlab("Longitute") + ylab("Latitude")
lowtrp <- as.data.frame(mriskLow, xy = T)
hightrp <- as.data.frame(mriskHigh, xy = T)
ggplot(data = lowtrp[complete.cases(lowtrp), ], aes(x = x, y = y)) +
geom_raster(aes(fill = layer)) +
scale_fill_gradient2("Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  -12,  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar") +
theme(legend.position = 'bottom') +
geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9) +
xlab("Longitute") + ylab("Latitude")
ggplot(data = lowtrps[complete.cases(lowtrps), ], aes(x = x, y = y))+geom_raster(aes(fill = layer))+scale_fill_gradient2("Unscaled Infection Risk", low  =  "green",  mid  =  "yellow",  high  =  "red",   midpoint  =  median(lowtrps$layer, na.rm = T),  space  =  "rgb",  na.value  =  "grey50",  guide  =  "colourbar")+theme_bw()+theme(legend.position = 'bottom')+ geom_point(aes(x = lon,  y = lat), data = lowsite[-565, ], alpha = 0.9, pch = 1)+ggtitle("Endemic Site")+xlab("Longitude")+ylab("Latitude")
